{"Typealiases.html#/s:21SwiftQuantumComputing7SQCViewa":{"name":"SQCView","abstract":"<p>Undocumented</p>"},"Typealiases.html#/SQCView":{"name":"SQCView"},"Structs/QuantumOperator.html#/s:21SwiftQuantumComputing0B8OperatorV010simplifiedbD0AA010SimplifiedbD0Ovp":{"name":"simplifiedQuantumOperator","abstract":"<p>Check <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SimplifiedQuantumOperatorConvertible.html#/s:21SwiftQuantumComputing010SimplifiedB19OperatorConvertibleP010simplifiedbE0AA0dbE0Ovp\">SimplifiedQuantumOperatorConvertible.simplifiedQuantumOperator</a></code></p>","parent_name":"QuantumOperator"},"Structs/QuantumOperator.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"QuantumOperator"},"Structs/QuantumOperator.html#/s:SH4hash4intoys6HasherVz_tF":{"name":"hash(into:)","parent_name":"QuantumOperator"},"Structs/Noise.html#/s:21SwiftQuantumComputing5NoiseV15quantumOperatorAA0bF0Vvp":{"name":"quantumOperator","abstract":"<p>Check <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/QuantumOperatorConvertible.html#/s:21SwiftQuantumComputing0B19OperatorConvertibleP07quantumD0AA0bD0Vvp\">QuantumOperatorConvertible.quantumOperator</a></code></p>","parent_name":"Noise"},"Structs/Noise.html#/s:21SwiftQuantumComputing5NoiseV010simplifiedB8OperatorAA010SimplifiedbF0Ovp":{"name":"simplifiedQuantumOperator","abstract":"<p>Check <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SimplifiedQuantumOperatorConvertible.html#/s:21SwiftQuantumComputing010SimplifiedB19OperatorConvertibleP010simplifiedbE0AA0dbE0Ovp\">SimplifiedQuantumOperatorConvertible.simplifiedQuantumOperator</a></code></p>","parent_name":"Noise"},"Structs/Noise.html#/s:21SwiftQuantumComputing5NoiseV7bitFlip11probability6targetACSd_SitFZ":{"name":"bitFlip(probability:target:)","abstract":"<p>Returns a noise channel that applies a bit flip to <code>target</code> with given <code>probability</code></p>","parent_name":"Noise"},"Structs/Noise.html#/s:21SwiftQuantumComputing5NoiseV8matricesAD6inputsACSayAA6MatrixVG_SaySiGtFZ":{"name":"matrices(matrices:inputs:)","abstract":"<p>Returns a generic noise channel that applies <code>matrices</code> to any number of <code>inputs</code>.","parent_name":"Noise"},"Structs/Noise.html#/s:21SwiftQuantumComputing5NoiseV12phaseDamping11probability6targetACSd_SitFZ":{"name":"phaseDamping(probability:target:)","abstract":"<p>Returns a noise channel that applies a phase damping to <code>target</code> with given <code>probability</code></p>","parent_name":"Noise"},"Structs/Noise.html#/s:21SwiftQuantumComputing5NoiseV010simplifiedD0AA010SimplifiedD0Ovp":{"name":"simplifiedNoise","abstract":"<p>Check <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SimplifiedNoiseConvertible.html#/s:21SwiftQuantumComputing26SimplifiedNoiseConvertibleP010simplifiedE0AA0dE0Ovp\">SimplifiedNoiseConvertible.simplifiedNoise</a></code></p>","parent_name":"Noise"},"Structs/Noise.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"Noise"},"Structs/Noise.html#/s:SH4hash4intoys6HasherVz_tF":{"name":"hash(into:)","parent_name":"Noise"},"Structs/Rational/InitError.html#/s:21SwiftQuantumComputing8RationalV9InitErrorO23denominatorCanNotBeZeroyA2EmF":{"name":"denominatorCanNotBeZero","abstract":"<p>Throwed if <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Rational.html#/s:21SwiftQuantumComputing8RationalV11denominatorSivp\">denominator</a></code> is 0</p>","parent_name":"InitError"},"Structs/Rational.html#/s:21SwiftQuantumComputing8RationalV9numeratorSivp":{"name":"numerator","abstract":"<p>Numerator part. Carries the sign of the rational number</p>","parent_name":"Rational"},"Structs/Rational.html#/s:21SwiftQuantumComputing8RationalV11denominatorSivp":{"name":"denominator","abstract":"<p>Denominator part</p>","parent_name":"Rational"},"Structs/Rational/InitError.html":{"name":"InitError","abstract":"<p>Errors throwed by <code>Rational(numerator:denominator:)</code></p>","parent_name":"Rational"},"Structs/Rational.html#/s:21SwiftQuantumComputing8RationalV9numerator11denominatorACSi_SitKcfc":{"name":"init(numerator:denominator:)","abstract":"<p>Initializes a <code>Rational</code> instance setting <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Rational.html#/s:21SwiftQuantumComputing8RationalV9numeratorSivp\">numerator</a></code> &amp; <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Rational.html#/s:21SwiftQuantumComputing8RationalV11denominatorSivp\">denominator</a></code> with the provided parameters</p>","parent_name":"Rational"},"Structs/Rational.html#/s:21SwiftQuantumComputing8RationalV4zeroACvpZ":{"name":"zero","abstract":"<p>Constant: 0/1</p>","parent_name":"Rational"},"Structs/Rational.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"Rational"},"Structs/MainDrawerFactory.html#/s:21SwiftQuantumComputing17MainDrawerFactoryVACycfc":{"name":"init()","abstract":"<p>Initialize a <code>MainDrawerFactory</code> instance</p>","parent_name":"MainDrawerFactory"},"Structs/MainDrawerFactory.html#/s:21SwiftQuantumComputing17MainDrawerFactoryV04makeE0AA8Drawable_pyF":{"name":"makeDrawer()","abstract":"<p>Check <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/DrawerFactory.html#/s:21SwiftQuantumComputing13DrawerFactoryP04makeD0AA8Drawable_pyF\">DrawerFactory.makeDrawer()</a></code></p>","parent_name":"MainDrawerFactory"},"Structs/Gate/Axis.html#/s:21SwiftQuantumComputing4GateV4AxisO1xyA2EmF":{"name":"x","abstract":"<p>Pauli X</p>","parent_name":"Axis"},"Structs/Gate/Axis.html#/s:21SwiftQuantumComputing4GateV4AxisO1yyA2EmF":{"name":"y","abstract":"<p>Pauli Y</p>","parent_name":"Axis"},"Structs/Gate/Axis.html#/s:21SwiftQuantumComputing4GateV4AxisO1zyA2EmF":{"name":"z","abstract":"<p>Pauli Z</p>","parent_name":"Axis"},"Structs/Gate/MakeQuantumFourierTransformError.html#/s:21SwiftQuantumComputing4GateV04MakeB21FourierTransformErrorO25inputsCanNotBeAnEmptyListyA2EmF":{"name":"inputsCanNotBeAnEmptyList","abstract":"<p>Throwed if <code>inputs</code> is an empty list</p>","parent_name":"MakeQuantumFourierTransformError"},"Structs/Gate/MakeModularExponentiationError.html#/s:21SwiftQuantumComputing4GateV30MakeModularExponentiationErrorO25baseHasToBeBiggerThanZeroyA2EmF":{"name":"baseHasToBeBiggerThanZero","abstract":"<p>Throwed when <code>base</code> is 0 (or less). First, this implementation only works with a positive <code>base</code>. It  also has to be","parent_name":"MakeModularExponentiationError"},"Structs/Gate/MakeModularExponentiationError.html#/s:21SwiftQuantumComputing4GateV30MakeModularExponentiationErrorO25inputsCanNotBeAnEmptyListyA2EmF":{"name":"inputsCanNotBeAnEmptyList","abstract":"<p>Throwed if <code>inputs</code> is an empty list</p>","parent_name":"MakeModularExponentiationError"},"Structs/Gate/MakeModularExponentiationError.html#/s:21SwiftQuantumComputing4GateV30MakeModularExponentiationErrorO27modulusHasToBeBiggerThanOneyA2EmF":{"name":"modulusHasToBeBiggerThanOne","abstract":"<p>Throwed when <code>modulus</code> is 1 (or less). First, this implementation only works with a positive <code>modulus</code>. It also","parent_name":"MakeModularExponentiationError"},"Structs/Gate/MakeModularExponentiationError.html#/s:21SwiftQuantumComputing4GateV30MakeModularExponentiationErrorO32modulusProducesANonUnitaryMatrixyA2EmF":{"name":"modulusProducesANonUnitaryMatrix","abstract":"<p>Throwed if it was not possible to build a unitary matrix with the provided <code>modulus</code>, most likely because","parent_name":"MakeModularExponentiationError"},"Structs/Gate/MakeInversionAboutMeanError.html#/s:21SwiftQuantumComputing4GateV27MakeInversionAboutMeanErrorO25inputsCanNotBeAnEmptyListyA2EmF":{"name":"inputsCanNotBeAnEmptyList","abstract":"<p>Throwed if <code>inputs</code> is an empty list</p>","parent_name":"MakeInversionAboutMeanError"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV15quantumOperatorAA0bF0Vvp":{"name":"quantumOperator","abstract":"<p>Check <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/QuantumOperatorConvertible.html#/s:21SwiftQuantumComputing0B19OperatorConvertibleP07quantumD0AA0bD0Vvp\">QuantumOperatorConvertible.quantumOperator</a></code></p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV010simplifiedB8OperatorAA010SimplifiedbF0Ovp":{"name":"simplifiedQuantumOperator","abstract":"<p>Check <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SimplifiedQuantumOperatorConvertible.html#/s:21SwiftQuantumComputing010SimplifiedB19OperatorConvertibleP010simplifiedbE0AA0dbE0Ovp\">SimplifiedQuantumOperatorConvertible.simplifiedQuantumOperator</a></code></p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV10controlled4gate8controlsA2C_SaySiGtFZ":{"name":"controlled(gate:controls:)","abstract":"<p>Returns a generic quantum <code>gate</code> controlled with <code>controls</code></p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV13controlledNot6target7controlACSi_SitFZ":{"name":"controlledNot(target:control:)","abstract":"<p>Returns a controlled not gate with 2 inputs: <code>target</code> &amp; <code>control</code></p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV8hadamard6targetACSi_tFZ":{"name":"hadamard(target:)","abstract":"<p>Returns a hadamard gate with 1 input: <code>target</code></p>","parent_name":"Gate"},"Structs/Gate/MakeInversionAboutMeanError.html":{"name":"MakeInversionAboutMeanError","abstract":"<p>Errors throwed by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Gate.html#/s:21SwiftQuantumComputing4GateV22makeInversionAboutMean6inputss6ResultOyA2C04MakefgH5ErrorOGSaySiG_tFZ\">Gate.makeInversionAboutMean(inputs:)</a></code></p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV22makeInversionAboutMean6inputss6ResultOyA2C04MakefgH5ErrorOGSaySiG_tFZ":{"name":"makeInversionAboutMean(inputs:)","abstract":"<p>Buils a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Gate.html#/s:21SwiftQuantumComputing4GateV6matrixAD6inputsAcA6MatrixV_SaySiGtFZ\">Gate.matrix(matrix:inputs:)</a></code> gate that produces an inversion about the mean on","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV6matrixAD6inputsAcA6MatrixV_SaySiGtFZ":{"name":"matrix(matrix:inputs:)","abstract":"<p>Returns a generic quantum gate built with a <code>matrix</code> (it is expected to be unitary) and any number of <code>inputs</code>","parent_name":"Gate"},"Structs/Gate/MakeModularExponentiationError.html":{"name":"MakeModularExponentiationError","abstract":"<p>Errors throwed by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Gate.html#/s:21SwiftQuantumComputing4GateV25makeModularExponentiation4base7modulus8exponent6inputss6ResultOySayACGAC04MakefG5ErrorOGSi_SiSaySiGAOtFZ\">Gate.makeModularExponentiation(base:modulus:exponent:inputs:)</a></code></p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV25makeModularExponentiation4base7modulus8exponent6inputss6ResultOySayACGAC04MakefG5ErrorOGSi_SiSaySiGAOtFZ":{"name":"makeModularExponentiation(base:modulus:exponent:inputs:)","abstract":"<p>Implements with <code>Gate</code> instances a modular exponentiation performed over <code>modulus</code> with <code>base</code> raised to <code>exponent</code>.","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV3not6targetACSi_tFZ":{"name":"not(target:)","abstract":"<p>Returns a not gate with 1 input: <code>target</code></p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV6oracle10truthTable8controls4gateACSaySSG_SaySiGACtFZ":{"name":"oracle(truthTable:controls:gate:)","abstract":"<p>Returns an oracle gate composed of a <code>truthtable</code> that specifies which <code>controls</code> activate a <code>gate</code></p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV6oracle10truthTable8controls6targetACSaySSG_SaySiGSitFZ":{"name":"oracle(truthTable:controls:target:)","abstract":"<p>Produces a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Gate.html#/s:21SwiftQuantumComputing4GateV6oracle10truthTable8controls4gateACSaySSG_SaySiGACtFZ\">Gate.oracle(truthTable:controls:gate:)</a></code> with a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Gate.html#/s:21SwiftQuantumComputing4GateV3not6targetACSi_tFZ\">Gate.not(target:)</a></code> in target.</p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV10phaseShift7radians6targetACSd_SitFZ":{"name":"phaseShift(radians:target:)","abstract":"<p>Returns a quantum gate that shifts phase of the quantum state in <code>target</code> by <code>radians</code></p>","parent_name":"Gate"},"Structs/Gate/MakeQuantumFourierTransformError.html":{"name":"MakeQuantumFourierTransformError","abstract":"<p>Errors throwed by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Gate.html#/s:21SwiftQuantumComputing4GateV04makeB16FourierTransform6inputs7inverses6ResultOyA2C04MakebfG5ErrorOGSaySiG_SbtFZ\">Gate.makeQuantumFourierTransform(inputs:inverse:)</a></code></p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV04makeB16FourierTransform6inputs7inverses6ResultOyA2C04MakebfG5ErrorOGSaySiG_SbtFZ":{"name":"makeQuantumFourierTransform(inputs:inverse:)","abstract":"<p>Buils a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Gate.html#/s:21SwiftQuantumComputing4GateV6matrixAD6inputsAcA6MatrixV_SaySiGtFZ\">Gate.matrix(matrix:inputs:)</a></code> gate that performs a Quantum Fourier Transform over <code>inputs</code>","parent_name":"Gate"},"Structs/Gate/Axis.html":{"name":"Axis","abstract":"<p>Paulis P = {X, Y, Z}</p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV8rotation4axis7radians6targetA2C4AxisO_SdSitFZ":{"name":"rotation(axis:radians:target:)","abstract":"<p>Returns a quantum gate that defines a rotation of <code>radians</code> around <code>axis</code> of the quantum state in <code>target</code></p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV010simplifiedD0AA010SimplifiedD0Ovp":{"name":"simplifiedGate","abstract":"<p>Check <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SimplifiedGateConvertible.html#/s:21SwiftQuantumComputing25SimplifiedGateConvertibleP010simplifiedE0AA0dE0Ovp\">SimplifiedGateConvertible.simplifiedGate</a></code></p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV22makeInversionAboutMean6inputss6ResultOyA2C04MakefgH5ErrorOGSnySiG_tFZ":{"name":"makeInversionAboutMean(inputs:)","abstract":"<p>Builds a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Gate.html#/s:21SwiftQuantumComputing4GateV6matrixAD6inputsAcA6MatrixV_SaySiGtFZ\">Gate.matrix(matrix:inputs:)</a></code> gate that produces an inversion about the mean on</p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV22makeInversionAboutMean6inputss6ResultOyA2C04MakefgH5ErrorOGSNySiG_tFZ":{"name":"makeInversionAboutMean(inputs:)","abstract":"<p>Builds a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Gate.html#/s:21SwiftQuantumComputing4GateV6matrixAD6inputsAcA6MatrixV_SaySiGtFZ\">Gate.matrix(matrix:inputs:)</a></code> gate that produces an inversion about the mean on</p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV25makeModularExponentiation4base7modulus8exponent6inputss6ResultOySayACGAC04MakefG5ErrorOGSi_SiSnySiGSaySiGtFZ":{"name":"makeModularExponentiation(base:modulus:exponent:inputs:)","abstract":"<p>Implements with <code>Gate</code> instances a modular exponentiation performed over <code>modulus</code> with <code>base</code> raised to <code>exponent</code></p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV25makeModularExponentiation4base7modulus8exponent6inputss6ResultOySayACGAC04MakefG5ErrorOGSi_SiSNySiGSaySiGtFZ":{"name":"makeModularExponentiation(base:modulus:exponent:inputs:)","abstract":"<p>Implements with <code>Gate</code> instances a modular exponentiation performed over <code>modulus</code> with <code>base</code> raised to <code>exponent</code></p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV25makeModularExponentiation4base7modulus8exponent6inputss6ResultOySayACGAC04MakefG5ErrorOGSi_SiSaySiGSnySiGtFZ":{"name":"makeModularExponentiation(base:modulus:exponent:inputs:)","abstract":"<p>Implements with <code>Gate</code> instances a modular exponentiation performed over <code>modulus</code> with <code>base</code> raised to <code>exponent</code></p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV25makeModularExponentiation4base7modulus8exponent6inputss6ResultOySayACGAC04MakefG5ErrorOGSi_SiSaySiGSNySiGtFZ":{"name":"makeModularExponentiation(base:modulus:exponent:inputs:)","abstract":"<p>Implements with <code>Gate</code> instances a modular exponentiation performed over <code>modulus</code> with <code>base</code> raised to <code>exponent</code></p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV25makeModularExponentiation4base7modulus8exponent6inputss6ResultOySayACGAC04MakefG5ErrorOGSi_SiSnySiGAOtFZ":{"name":"makeModularExponentiation(base:modulus:exponent:inputs:)","abstract":"<p>Implements with <code>Gate</code> instances a modular exponentiation performed over <code>modulus</code> with <code>base</code> raised to <code>exponent</code></p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV25makeModularExponentiation4base7modulus8exponent6inputss6ResultOySayACGAC04MakefG5ErrorOGSi_SiSnySiGSNySiGtFZ":{"name":"makeModularExponentiation(base:modulus:exponent:inputs:)","abstract":"<p>Implements with <code>Gate</code> instances a modular exponentiation performed over <code>modulus</code> with <code>base</code> raised to <code>exponent</code></p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV25makeModularExponentiation4base7modulus8exponent6inputss6ResultOySayACGAC04MakefG5ErrorOGSi_SiSNySiGSnySiGtFZ":{"name":"makeModularExponentiation(base:modulus:exponent:inputs:)","abstract":"<p>Implements with <code>Gate</code> instances a modular exponentiation performed over <code>modulus</code> with <code>base</code> raised to <code>exponent</code></p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV25makeModularExponentiation4base7modulus8exponent6inputss6ResultOySayACGAC04MakefG5ErrorOGSi_SiSNySiGAOtFZ":{"name":"makeModularExponentiation(base:modulus:exponent:inputs:)","abstract":"<p>Implements with <code>Gate</code> instances a modular exponentiation performed over <code>modulus</code> with <code>base</code> raised to <code>exponent</code></p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV6oracle10truthTable8controls4gateACSaySSG_SnySiGACtFZ":{"name":"oracle(truthTable:controls:gate:)","abstract":"<p>Produces an oracle gate</p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV6oracle10truthTable8controls4gateACSaySSG_SNySiGACtFZ":{"name":"oracle(truthTable:controls:gate:)","abstract":"<p>Produces an oracle gate</p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV6oracle10truthTable8controls6targetACSaySSG_SnySiGSitFZ":{"name":"oracle(truthTable:controls:target:)","abstract":"<p>Produces an oracle gate</p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV6oracle10truthTable8controls6targetACSaySSG_SNySiGSitFZ":{"name":"oracle(truthTable:controls:target:)","abstract":"<p>Produces an oracle gate</p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV6oracle10truthTable8controls7targetsSayACGSaySS0F0_SS10activationtG_SaySiGSnySiGtFZ":{"name":"oracle(truthTable:controls:targets:)","abstract":"<p>Produces a list of oracle gates</p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV6oracle10truthTable8controls7targetsSayACGSaySS0F0_SS10activationtG_SnySiGALtFZ":{"name":"oracle(truthTable:controls:targets:)","abstract":"<p>Produces a list of oracle gates</p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV6oracle10truthTable8controls7targetsSayACGSaySS0F0_SS10activationtG_SNySiGSnySiGtFZ":{"name":"oracle(truthTable:controls:targets:)","abstract":"<p>Produces a list of oracle gates</p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV6oracle10truthTable8controls7targetsSayACGSaySS0F0_SS10activationtG_SaySiGSNySiGtFZ":{"name":"oracle(truthTable:controls:targets:)","abstract":"<p>Produces a list of oracle gates</p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV6oracle10truthTable8controls7targetsSayACGSaySS0F0_SS10activationtG_SnySiGSNySiGtFZ":{"name":"oracle(truthTable:controls:targets:)","abstract":"<p>Produces a list of oracle gates</p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV6oracle10truthTable8controls7targetsSayACGSaySS0F0_SS10activationtG_SNySiGALtFZ":{"name":"oracle(truthTable:controls:targets:)","abstract":"<p>Produces a list of oracle gates</p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV8hadamard7targetsSayACGSnySiG_tFZ":{"name":"hadamard(targets:)","abstract":"<p>Produces a list of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Gate.html#/s:21SwiftQuantumComputing4GateV8hadamard6targetACSi_tFZ\">Gate.hadamard(target:)</a></code>, each gate on one of the <code>targets</code></p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV8hadamard7targetsSayACGSNySiG_tFZ":{"name":"hadamard(targets:)","abstract":"<p>Produces a list of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Gate.html#/s:21SwiftQuantumComputing4GateV8hadamard6targetACSi_tFZ\">Gate.hadamard(target:)</a></code>, each gate on one of the <code>targets</code></p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV8hadamard7targetsSayACGSid_tFZ":{"name":"hadamard(targets:)","abstract":"<p>Produces a list of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Gate.html#/s:21SwiftQuantumComputing4GateV8hadamard6targetACSi_tFZ\">Gate.hadamard(target:)</a></code>, each gate on one of the <code>targets</code></p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV3not7targetsSayACGSnySiG_tFZ":{"name":"not(targets:)","abstract":"<p>Produces a list of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Gate.html#/s:21SwiftQuantumComputing4GateV3not6targetACSi_tFZ\">Gate.not(target:)</a></code>, each gate on one of the <code>targets</code></p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV3not7targetsSayACGSNySiG_tFZ":{"name":"not(targets:)","abstract":"<p>Produces a list of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Gate.html#/s:21SwiftQuantumComputing4GateV3not6targetACSi_tFZ\">Gate.not(target:)</a></code>, each gate on one of the <code>targets</code></p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV3not7targetsSayACGSid_tFZ":{"name":"not(targets:)","abstract":"<p>Produces a list of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Gate.html#/s:21SwiftQuantumComputing4GateV3not6targetACSi_tFZ\">Gate.not(target:)</a></code>, each gate on one of the <code>targets</code></p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV13ExtendedTrutha":{"name":"ExtendedTruth","abstract":"<p>Represents the <code>activation</code> (or bits) produded by a function after inputting a given <code>truth</code></p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV6oracle10truthTable8controls7targetsSayACGSaySS0F0_SS10activationtG_SaySiGALtFZ":{"name":"oracle(truthTable:controls:targets:)","abstract":"<p>Produces a list of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Gate.html#/s:21SwiftQuantumComputing4GateV6oracle10truthTable8controls4gateACSaySSG_SaySiGACtFZ\">Gate.oracle(truthTable:controls:gate:)</a></code>. A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Gate.html#/s:21SwiftQuantumComputing4GateV3not6targetACSi_tFZ\">Gate.not(target:)</a></code> is produced for each target","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV8hadamard7targetsSayACGSaySiG_tFZ":{"name":"hadamard(targets:)","abstract":"<p>Produces a list of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Gate.html#/s:21SwiftQuantumComputing4GateV8hadamard6targetACSi_tFZ\">Gate.hadamard(target:)</a></code>, each gate on one of the <code>targets</code></p>","parent_name":"Gate"},"Structs/Gate.html#/s:21SwiftQuantumComputing4GateV3not7targetsSayACGSaySiG_tFZ":{"name":"not(targets:)","abstract":"<p>Produces a list of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Gate.html#/s:21SwiftQuantumComputing4GateV3not6targetACSi_tFZ\">Gate.not(target:)</a></code>, each gate on one of the <code>targets</code></p>","parent_name":"Gate"},"Structs/Gate.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"Gate"},"Structs/Gate.html#/s:SH4hash4intoys6HasherVz_tF":{"name":"hash(into:)","parent_name":"Gate"},"Structs/Vector/InitError.html#/s:21SwiftQuantumComputing6VectorV9InitErrorO21doNotPassAnEmptyArrayyA2EmF":{"name":"doNotPassAnEmptyArray","abstract":"<p>Throwed when no <code>Complex</code> element is provided to initialize a new vector</p>","parent_name":"InitError"},"Structs/Vector.html#/s:21SwiftQuantumComputing6VectorV5countSivp":{"name":"count","abstract":"<p>Number of elements in the vector</p>","parent_name":"Vector"},"Structs/Vector.html#/s:21SwiftQuantumComputing6VectorV5first13ComplexModule0F0VySdGvp":{"name":"first","abstract":"<p>Returns first element</p>","parent_name":"Vector"},"Structs/Vector.html#/s:21SwiftQuantumComputing6VectorVy13ComplexModule0E0VySdGSicip":{"name":"subscript(_:)","abstract":"<p>Use [index] to access elements in the vector</p>","parent_name":"Vector"},"Structs/Vector/InitError.html":{"name":"InitError","abstract":"<p>Errors throwed by <code>Vector.init()</code></p>","parent_name":"Vector"},"Structs/Vector.html#/s:21SwiftQuantumComputing6VectorVyACSay13ComplexModule0E0VySdGGKcfc":{"name":"init(_:)","abstract":"<p>Initializes a new column <code>Vector</code> instance with <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Vector.html#/s:21SwiftQuantumComputing6VectorV8elementsSay13ComplexModule0F0VySdGGvp\">elements</a></code>.</p>","parent_name":"Vector"},"Structs/Vector.html#/s:21SwiftQuantumComputing6VectorV8elementsSay13ComplexModule0F0VySdGGvp":{"name":"elements","abstract":"<p>Maps vector into a list</p>","parent_name":"Vector"},"Structs/Vector.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"Vector"},"Structs/Vector.html#/s:ST8IteratorQa":{"name":"Iterator","parent_name":"Vector"},"Structs/Vector.html#/s:ST12makeIterator0B0QzyF":{"name":"makeIterator()","parent_name":"Vector"},"Structs/Matrix/InitError.html#/s:21SwiftQuantumComputing6MatrixV9InitErrorO21doNotPassAnEmptyArrayyA2EmF":{"name":"doNotPassAnEmptyArray","abstract":"<p>Throwed when no <code>Complex</code> element is provided to initialize a new matrix</p>","parent_name":"InitError"},"Structs/Matrix/InitError.html#/s:21SwiftQuantumComputing6MatrixV9InitErrorO015subArraysHaveToI8SameSizeyA2EmF":{"name":"subArraysHaveToHaveSameSize","abstract":"<p>Throwed if any sub-list/row does not have the same length that the others</p>","parent_name":"InitError"},"Structs/Matrix/InitError.html#/s:21SwiftQuantumComputing6MatrixV9InitErrorO23subArraysMustNotBeEmptyyA2EmF":{"name":"subArraysMustNotBeEmpty","abstract":"<p>Throwed if any sub-list/row is empty</p>","parent_name":"InitError"},"Structs/Matrix.html#/s:21SwiftQuantumComputing6MatrixV8rowCountSivp":{"name":"rowCount","abstract":"<p>Number of rows in the matrix</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:21SwiftQuantumComputing6MatrixV11columnCountSivp":{"name":"columnCount","abstract":"<p>Number of columns per row in the matrix</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:21SwiftQuantumComputing6MatrixV5first13ComplexModule0F0VySdGvp":{"name":"first","abstract":"<p>Returns first element in first row</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:21SwiftQuantumComputing6MatrixVy13ComplexModule0E0VySdGSi_Sitcip":{"name":"subscript(_:_:)","abstract":"<p>Use [row, column] to access elements in the matrix</p>","parent_name":"Matrix"},"Structs/Matrix/InitError.html":{"name":"InitError","abstract":"<p>Errors throwed by <code>Matrix()</code></p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:21SwiftQuantumComputing6MatrixVyACSaySay13ComplexModule0E0VySdGGGKcfc":{"name":"init(_:)","abstract":"<p>Initializes a new <code>Matrix</code> instance with <code>elememts</code></p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"Matrix"},"Structs/Matrix.html#/s:21SwiftQuantumComputing6MatrixV8elementsSaySay13ComplexModule0F0VySdGGGvp":{"name":"elements","abstract":"<p>Maps matrix into a list of rows</p>","parent_name":"Matrix"},"Structs/Matrix.html#/s:ST8IteratorQa":{"name":"Iterator","parent_name":"Matrix"},"Structs/Matrix.html#/s:21SwiftQuantumComputing6MatrixV12makeIterators08IndexingF0Vys10ArraySliceVy13ComplexModule0J0VySdGGGyF":{"name":"makeIterator()","abstract":"<p>Returns iterator that traverses the matrix by column</p>","parent_name":"Matrix"},"Structs/MainCircuitStatevectorFactory.html#/s:21SwiftQuantumComputing29MainCircuitStatevectorFactoryVACycfc":{"name":"init()","abstract":"<p>Initialize a <code>MainCircuitStatevectorFactory</code> instance</p>","parent_name":"MainCircuitStatevectorFactory"},"Structs/MainCircuitStatevectorFactory.html#/s:21SwiftQuantumComputing29MainCircuitStatevectorFactoryV04makeF06vectors6ResultOyAA0eF0_pAA04MakeF5ErrorOGAA6VectorV_tF":{"name":"makeStatevector(vector:)","abstract":"<p>Check <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CircuitStatevectorFactory.html#/s:21SwiftQuantumComputing25CircuitStatevectorFactoryP04makeE06vectors6ResultOyAA0dE0_pAA04MakeE5ErrorOGAA6VectorV_tF\">CircuitStatevectorFactory.makeStatevector(vector:)</a></code></p>","parent_name":"MainCircuitStatevectorFactory"},"Structs/MainNoiseCircuitFactory/DensityMatrixConfiguration.html#/s:21SwiftQuantumComputing23MainNoiseCircuitFactoryV26DensityMatrixConfigurationO6matrixyAESi_tcAEmF":{"name":"matrix(expansionConcurrency:)","abstract":"<p>Each <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Gate.html\">Gate</a></code> is expanded into a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Matrix.html\">Matrix</a></code> before applying to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CircuitDensityMatrix.html\">CircuitDensityMatrix</a></code> for the entire circuit.","parent_name":"DensityMatrixConfiguration"},"Structs/MainNoiseCircuitFactory/DensityMatrixConfiguration.html#/s:21SwiftQuantumComputing23MainNoiseCircuitFactoryV26DensityMatrixConfigurationO3rowyAESi_SitcAEmF":{"name":"row(calculationConcurrency:expansionConcurrency:)","abstract":"<p>To apply a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Gate.html\">Gate</a></code> to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CircuitDensityMatrix.html\">CircuitDensityMatrix</a></code> for the entire circuit, up to <code>calculationConcurrency</code>","parent_name":"DensityMatrixConfiguration"},"Structs/MainNoiseCircuitFactory/DensityMatrixConfiguration.html":{"name":"DensityMatrixConfiguration","abstract":"<p>Define behaviour of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/NoiseCircuit.html#/s:21SwiftQuantumComputing12NoiseCircuitP13densityMatrix16withInitialStates6ResultOyAA0e7DensityG0_pAA0lG5ErrorOGAaH_p_tF\">NoiseCircuit.densityMatrix(withInitialState:)</a></code></p>","parent_name":"MainNoiseCircuitFactory"},"Structs/MainNoiseCircuitFactory.html#/s:21SwiftQuantumComputing23MainNoiseCircuitFactoryV26densityMatrixConfigurationA2C07DensityiJ0O_tcfc":{"name":"init(densityMatrixConfiguration:)","abstract":"<p>Initialize a <code>MainNoiseCircuitFactory</code> instance.</p>","parent_name":"MainNoiseCircuitFactory"},"Structs/MainNoiseCircuitFactory.html#/s:21SwiftQuantumComputing23MainNoiseCircuitFactoryV04makeeF016quantumOperatorsAA0eF0_pSayAA0B8OperatorVG_tF":{"name":"makeNoiseCircuit(quantumOperators:)","abstract":"<p>Check <code>CircuitFactory.makeNoiseCircuit(gates:)</code></p>","parent_name":"MainNoiseCircuitFactory"},"Structs/MainCircuitFactory/StatevectorConfiguration.html#/s:21SwiftQuantumComputing18MainCircuitFactoryV24StatevectorConfigurationO6matrixyAESi_tcAEmF":{"name":"matrix(expansionConcurrency:)","abstract":"<p>Each <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Gate.html\">Gate</a></code> is expanded into a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Matrix.html\">Matrix</a></code> before applying to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CircuitStatevector.html\">CircuitStatevector</a></code> for the entire circuit.","parent_name":"StatevectorConfiguration"},"Structs/MainCircuitFactory/StatevectorConfiguration.html#/s:21SwiftQuantumComputing18MainCircuitFactoryV24StatevectorConfigurationO3rowyAESi_SitcAEmF":{"name":"row(calculationConcurrency:expansionConcurrency:)","abstract":"<p>To apply a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Gate.html\">Gate</a></code> to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CircuitStatevector.html\">CircuitStatevector</a></code> for the entire circuit, up to <code>calculationConcurrency</code>","parent_name":"StatevectorConfiguration"},"Structs/MainCircuitFactory/StatevectorConfiguration.html#/s:21SwiftQuantumComputing18MainCircuitFactoryV24StatevectorConfigurationO5valueyAESi_tcAEmF":{"name":"value(calculationConcurrency:)","abstract":"<p>To apply a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Gate.html\">Gate</a></code> to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CircuitStatevector.html\">CircuitStatevector</a></code> for the entire circuit, up to <code>calculationConcurrency</code>","parent_name":"StatevectorConfiguration"},"Structs/MainCircuitFactory/StatevectorConfiguration.html#/s:21SwiftQuantumComputing18MainCircuitFactoryV24StatevectorConfigurationO6directyAESi_tcAEmF":{"name":"direct(calculationConcurrency:)","abstract":"<p>To apply a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Gate.html\">Gate</a></code> to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CircuitStatevector.html\">CircuitStatevector</a></code> for the entire circuit, up to <code>calculationConcurrency</code>","parent_name":"StatevectorConfiguration"},"Structs/MainCircuitFactory/UnitaryConfiguration.html#/s:21SwiftQuantumComputing18MainCircuitFactoryV20UnitaryConfigurationO6matrixyAESi_tcAEmF":{"name":"matrix(expansionConcurrency:)","abstract":"<p>Each <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Gate.html\">Gate</a></code> is expanded into a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Matrix.html\">Matrix</a></code> before applying to the unitary <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Matrix.html\">Matrix</a></code> for the entire circuit.","parent_name":"UnitaryConfiguration"},"Structs/MainCircuitFactory/UnitaryConfiguration.html#/s:21SwiftQuantumComputing18MainCircuitFactoryV20UnitaryConfigurationO3rowyAESi_SitcAEmF":{"name":"row(calculationConcurrency:expansionConcurrency:)","abstract":"<p>To apply a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Gate.html\">Gate</a></code> to the unitary <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Matrix.html\">Matrix</a></code> for the entire circuit, up to <code>calculationConcurrency</code>","parent_name":"UnitaryConfiguration"},"Structs/MainCircuitFactory/UnitaryConfiguration.html#/s:21SwiftQuantumComputing18MainCircuitFactoryV20UnitaryConfigurationO5valueyAESi_tcAEmF":{"name":"value(calculationConcurrency:)","abstract":"<p>To apply a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Gate.html\">Gate</a></code> to the unitary <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Matrix.html\">Matrix</a></code> for the entire circuit, up to <code>calculationConcurrency</code> values","parent_name":"UnitaryConfiguration"},"Structs/MainCircuitFactory/UnitaryConfiguration.html":{"name":"UnitaryConfiguration","abstract":"<p>Define performance and memory footprint of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Circuit.html#/s:21SwiftQuantumComputing7CircuitP7unitary14withQubitCounts6ResultOyAA6MatrixVAA12UnitaryErrorOGSi_tF\">Circuit.unitary(withQubitCount:)</a></code>.</p>","parent_name":"MainCircuitFactory"},"Structs/MainCircuitFactory/StatevectorConfiguration.html":{"name":"StatevectorConfiguration","abstract":"<p>Define performance and memory footprint of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Circuit.html#/s:21SwiftQuantumComputing7CircuitP11statevector16withInitialStates6ResultOyAA0D11Statevector_pAA0J5ErrorOGAaH_p_tF\">Circuit.statevector(withInitialState:)</a></code></p>","parent_name":"MainCircuitFactory"},"Structs/MainCircuitFactory.html#/s:21SwiftQuantumComputing18MainCircuitFactoryV20unitaryConfiguration011statevectorH0A2C07UnitaryH0O_AC011StatevectorH0Otcfc":{"name":"init(unitaryConfiguration:statevectorConfiguration:)","abstract":"<p>Initialize a <code>MainCircuitFactory</code> instance.</p>","parent_name":"MainCircuitFactory"},"Structs/MainCircuitFactory.html#/s:21SwiftQuantumComputing18MainCircuitFactoryV04makeE05gatesAA0E0_pSayAA4GateVG_tF":{"name":"makeCircuit(gates:)","abstract":"<p>Check <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CircuitFactory.html#/s:21SwiftQuantumComputing14CircuitFactoryP04makeD05gatesAA0D0_pSayAA4GateVG_tF\">CircuitFactory.makeCircuit(gates:)</a></code></p>","parent_name":"MainCircuitFactory"},"Structs/MainCircuitDensityMatrixFactory.html#/s:21SwiftQuantumComputing31MainCircuitDensityMatrixFactoryVACycfc":{"name":"init()","abstract":"<p>Initialize a <code>MainCircuitDensityMatrixFactory</code> instance</p>","parent_name":"MainCircuitDensityMatrixFactory"},"Structs/MainCircuitDensityMatrixFactory.html#/s:21SwiftQuantumComputing31MainCircuitDensityMatrixFactoryV04makefG06matrixs6ResultOyAA0efG0_pAA04MakefG5ErrorOGAA0G0V_tF":{"name":"makeDensityMatrix(matrix:)","abstract":"<p>Check <code>CircuitDensityMatrixFactory.makeDensityMatrix(matrix::)</code></p>","parent_name":"MainCircuitDensityMatrixFactory"},"Structs/MainXorGaussianEliminationSolverFactory.html#/s:21SwiftQuantumComputing39MainXorGaussianEliminationSolverFactoryVACycfc":{"name":"init()","abstract":"<p>Initialize a <code>MainXorGaussianEliminationSolverFactory</code> instance</p>","parent_name":"MainXorGaussianEliminationSolverFactory"},"Structs/MainXorGaussianEliminationSolverFactory.html#/s:21SwiftQuantumComputing39MainXorGaussianEliminationSolverFactoryV04makeH0AA0efgH0_pyF":{"name":"makeSolver()","abstract":"<p>Check <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/XorGaussianEliminationSolverFactory.html#/s:21SwiftQuantumComputing35XorGaussianEliminationSolverFactoryP04makeG0AA0defG0_pyF\">XorGaussianEliminationSolverFactory.makeSolver()</a></code></p>","parent_name":"MainXorGaussianEliminationSolverFactory"},"Structs/MainTwoLevelDecompositionSolverFactory/SingleQubitGateDecomposition.html#/s:21SwiftQuantumComputing38MainTwoLevelDecompositionSolverFactoryV015SingleQubitGateG0O4noneyA2EmF":{"name":"none","abstract":"<p>Fully controlled two-level matrix gates are not further decomposed</p>","parent_name":"SingleQubitGateDecomposition"},"Structs/MainTwoLevelDecompositionSolverFactory/SingleQubitGateDecomposition.html#/s:21SwiftQuantumComputing38MainTwoLevelDecompositionSolverFactoryV015SingleQubitGateG0O10cosineSineyA2EmF":{"name":"cosineSine","abstract":"<p>Fully controlled two-level matrix gates are decomposed using Cosine-Sine algorithm so the resulting sequence will","parent_name":"SingleQubitGateDecomposition"},"Structs/MainTwoLevelDecompositionSolverFactory/SingleQubitGateDecomposition.html":{"name":"SingleQubitGateDecomposition","abstract":"<p>Define further decomposition of single qubits gates performed by","parent_name":"MainTwoLevelDecompositionSolverFactory"},"Structs/MainTwoLevelDecompositionSolverFactory.html#/s:21SwiftQuantumComputing38MainTwoLevelDecompositionSolverFactoryV015singleQubitGateG0A2C06SingleklG0O_tcfc":{"name":"init(singleQubitGateDecomposition:)","abstract":"<p>Initialize a <code>MainTwoLevelDecompositionSolverFactory</code> instance</p>","parent_name":"MainTwoLevelDecompositionSolverFactory"},"Structs/MainTwoLevelDecompositionSolverFactory.html#/s:21SwiftQuantumComputing38MainTwoLevelDecompositionSolverFactoryV04makeH0AA0efgH0_pyF":{"name":"makeSolver()","abstract":"<p>Check <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/TwoLevelDecompositionSolverFactory.html#/s:21SwiftQuantumComputing34TwoLevelDecompositionSolverFactoryP04makeG0AA0defG0_pyF\">TwoLevelDecompositionSolverFactory.makeSolver()</a></code></p>","parent_name":"MainTwoLevelDecompositionSolverFactory"},"Structs/MainGeneticFactory.html#/s:21SwiftQuantumComputing18MainGeneticFactoryV07circuitF0AcA07CircuitF0_p_tcfc":{"name":"init(circuitFactory:)","abstract":"<p>Initialize a <code>MainGeneticFactory</code> instance</p>","parent_name":"MainGeneticFactory"},"Structs/MainGeneticFactory.html#/s:21SwiftQuantumComputing18MainGeneticFactoryV13evolveCircuit13configuration8useCases5gatess6ResultOySd4eval_SayAA4GateVGAGSiSg8oracleAttAA06EvolveH5ErrorOGAA0E13ConfigurationV_SayAA0E7UseCaseVGSayAA012ConfigurableO0_pGtF":{"name":"evolveCircuit(configuration:useCases:gates:)","abstract":"<p>Check <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/GeneticFactory.html#/s:21SwiftQuantumComputing14GeneticFactoryP13evolveCircuit13configuration8useCases5gatess6ResultOySd4eval_SayAA4GateVGAGSiSg8oracleAttAA06EvolveG5ErrorOGAA0D13ConfigurationV_SayAA0D7UseCaseVGSayAA012ConfigurableN0_pGtF\">GeneticFactory.evolveCircuit(configuration:useCases:gates:)</a></code></p>","parent_name":"MainGeneticFactory"},"Structs/GeneticUseCase/Circuit.html#/s:21SwiftQuantumComputing14GeneticUseCaseV7CircuitV5inputSSvp":{"name":"input","abstract":"<p>0&rsquo;s and 1&rsquo;s that set the values of the qubits before applying any quantum gate</p>","parent_name":"Circuit"},"Structs/GeneticUseCase/Circuit.html#/s:21SwiftQuantumComputing14GeneticUseCaseV7CircuitV6outputSSvp":{"name":"output","abstract":"<p>0&rsquo;s and 1&rsquo;s that specify the expected values of the qubits once the quantum gates are applied</p>","parent_name":"Circuit"},"Structs/GeneticUseCase/Circuit.html#/s:21SwiftQuantumComputing14GeneticUseCaseV7CircuitV10qubitCountSivp":{"name":"qubitCount","abstract":"<p>Number of qubits in the circuit</p>","parent_name":"Circuit"},"Structs/GeneticUseCase/TruthTable.html#/s:21SwiftQuantumComputing14GeneticUseCaseV10TruthTableV5truthSaySSGvp":{"name":"truth","abstract":"<p>List of qubit combinations for which the <code>control</code> in a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Gate.html#/s:21SwiftQuantumComputing4GateV13controlledNot6target7controlACSi_SitFZ\">Gate.controlledNot(target:control:)</a></code>","parent_name":"TruthTable"},"Structs/GeneticUseCase/TruthTable.html#/s:21SwiftQuantumComputing14GeneticUseCaseV10TruthTableV10qubitCountSivp":{"name":"qubitCount","abstract":"<p>Total number of qubits for all qubits combinations in <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/GeneticUseCase/TruthTable.html#/s:21SwiftQuantumComputing14GeneticUseCaseV10TruthTableV5truthSaySSGvp\">truth</a></code></p>","parent_name":"TruthTable"},"Structs/GeneticUseCase/InitError.html#/s:21SwiftQuantumComputing14GeneticUseCaseV9InitErrorO027circuitInputAndOutputHaveToM8SameSizeyA2EmF":{"name":"circuitInputAndOutputHaveToHaveSameSize","abstract":"<p>Throwed when <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/GeneticUseCase/Circuit.html#/s:21SwiftQuantumComputing14GeneticUseCaseV7CircuitV5inputSSvp\">GeneticUseCase.Circuit.input</a></code> and","parent_name":"InitError"},"Structs/GeneticUseCase/InitError.html#/s:21SwiftQuantumComputing14GeneticUseCaseV9InitErrorO61circuitOutputHasToBeANonEmptyStringComposedOnlyOfZerosAndOnesyA2EmF":{"name":"circuitOutputHasToBeANonEmptyStringComposedOnlyOfZerosAndOnes","abstract":"<p>Throwed if <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/GeneticUseCase/Circuit.html#/s:21SwiftQuantumComputing14GeneticUseCaseV7CircuitV6outputSSvp\">GeneticUseCase.Circuit.output</a></code> is not composed exclusively of 0&rsquo;s and 1&rsquo;s</p>","parent_name":"InitError"},"Structs/GeneticUseCase/InitError.html#/s:21SwiftQuantumComputing14GeneticUseCaseV9InitErrorO38circuitQubitCountHasToBeBiggerThanZeroyA2EmF":{"name":"circuitQubitCountHasToBeBiggerThanZero","abstract":"<p>Throwed if the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/GeneticUseCase/Circuit.html#/s:21SwiftQuantumComputing14GeneticUseCaseV7CircuitV5inputSSvp\">GeneticUseCase.Circuit.input</a></code> provided is empty</p>","parent_name":"InitError"},"Structs/GeneticUseCase/InitError.html#/s:21SwiftQuantumComputing14GeneticUseCaseV9InitErrorO041truthTableQubitCountHasToBeBiggerThanZeroN10MakeOracleyA2EmF":{"name":"truthTableQubitCountHasToBeBiggerThanZeroToMakeOracle","abstract":"<p>Throwed if <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/GeneticUseCase/TruthTable.html#/s:21SwiftQuantumComputing14GeneticUseCaseV10TruthTableV10qubitCountSivp\">GeneticUseCase.TruthTable.qubitCount</a></code> is 0</p>","parent_name":"InitError"},"Structs/GeneticUseCase/InitError.html":{"name":"InitError","abstract":"<p>Errors throwed by <code>GeneticUseCase.Circuit.init(input:output:)</code></p>","parent_name":"GeneticUseCase"},"Structs/GeneticUseCase/TruthTable.html":{"name":"TruthTable","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/GeneticUseCase.html\">GeneticUseCase</a></code> provides enough data to configure a circuit as well as the oracle gate inside the circuit.","parent_name":"GeneticUseCase"},"Structs/GeneticUseCase/Circuit.html":{"name":"Circuit","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/GeneticUseCase.html\">GeneticUseCase</a></code> provides enough data to configure a circuit as well as the oracle gate inside the circuit.","parent_name":"GeneticUseCase"},"Structs/GeneticUseCase.html#/s:21SwiftQuantumComputing14GeneticUseCaseV10truthTableAC05TruthH0Vvp":{"name":"truthTable","abstract":"<p>Data to configure the oracle gate inside the circuit</p>","parent_name":"GeneticUseCase"},"Structs/GeneticUseCase.html#/s:21SwiftQuantumComputing14GeneticUseCaseV7circuitAC7CircuitVvp":{"name":"circuit","abstract":"<p>Data to configure a circuit</p>","parent_name":"GeneticUseCase"},"Structs/GeneticUseCase.html#/s:21SwiftQuantumComputing14GeneticUseCaseV10truthTable12circuitInput0I6OutputACSaySSG_SSSgSStKcfc":{"name":"init(truthTable:circuitInput:circuitOutput:)","abstract":"<p>Initializes a <code>GeneticUseCase</code> instance.</p>","parent_name":"GeneticUseCase"},"Structs/GeneticUseCase.html#/s:21SwiftQuantumComputing14GeneticUseCaseV25emptyTruthTableQubitCount12circuitInput0L6OutputACSi_SSSgSStKcfc":{"name":"init(emptyTruthTableQubitCount:circuitInput:circuitOutput:)","abstract":"<p>Initializes a <code>GeneticUseCase</code> instance.</p>","parent_name":"GeneticUseCase"},"Structs/GeneticConfiguration/InitError.html#/s:21SwiftQuantumComputing20GeneticConfigurationV9InitErrorO27depthHasToBeAPositiveNumberyA2EmF":{"name":"depthHasToBeAPositiveNumber","abstract":"<p>Throwed when <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/GeneticConfiguration.html#/s:21SwiftQuantumComputing20GeneticConfigurationV5depthSnySiGvp\">GeneticConfiguration.depth</a></code> starts with a negative number</p>","parent_name":"InitError"},"Structs/GeneticConfiguration/InitError.html#/s:21SwiftQuantumComputing20GeneticConfigurationV9InitErrorO12depthIsEmptyyA2EmF":{"name":"depthIsEmpty","abstract":"<p>Throwed when <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/GeneticConfiguration.html#/s:21SwiftQuantumComputing20GeneticConfigurationV5depthSnySiGvp\">GeneticConfiguration.depth</a></code> is an empty <code>Range</code></p>","parent_name":"InitError"},"Structs/GeneticConfiguration/InitError.html#/s:21SwiftQuantumComputing20GeneticConfigurationV9InitErrorO35populationSizeHasToBeBiggerThanZeroyA2EmF":{"name":"populationSizeHasToBeBiggerThanZero","abstract":"<p>Throwed when <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/GeneticConfiguration.html#/s:21SwiftQuantumComputing20GeneticConfigurationV14populationSizeSnySiGvp\">GeneticConfiguration.populationSize</a></code> starts on 0 which is not valid because that would be the","parent_name":"InitError"},"Structs/GeneticConfiguration/InitError.html#/s:21SwiftQuantumComputing20GeneticConfigurationV9InitErrorO21populationSizeIsEmptyyA2EmF":{"name":"populationSizeIsEmpty","abstract":"<p>Throwed when <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/GeneticConfiguration.html#/s:21SwiftQuantumComputing20GeneticConfigurationV14populationSizeSnySiGvp\">GeneticConfiguration.populationSize</a></code> is an empty <code>Range</code></p>","parent_name":"InitError"},"Structs/GeneticConfiguration/InitError.html#/s:21SwiftQuantumComputing20GeneticConfigurationV9InitErrorO35tournamentSizeHasToBeBiggerThanZeroyA2EmF":{"name":"tournamentSizeHasToBeBiggerThanZero","abstract":"<p>Throwed when <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/GeneticConfiguration.html#/s:21SwiftQuantumComputing20GeneticConfigurationV14tournamentSizeSivp\">GeneticConfiguration.tournamentSize</a></code> is 0 which is not valid because a reproduction operation","parent_name":"InitError"},"Structs/GeneticConfiguration/InitError.html":{"name":"InitError","abstract":"<p>Errors throwed by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/GeneticConfiguration.html#/s:21SwiftQuantumComputing20GeneticConfigurationV5depth15generationCount14populationSize010tournamentJ019mutationProbability9threshold05errorM0ACSnySiG_SiAKSiS3dtKcfc\">GeneticConfiguration.init(depth:generationCount:populationSize:tournamentSize:mutationProbability:threshold:errorProbability:)</a></code></p>","parent_name":"GeneticConfiguration"},"Structs/GeneticConfiguration.html#/s:21SwiftQuantumComputing20GeneticConfigurationV5depthSnySiGvp":{"name":"depth","abstract":"<p>Number of gates in an evolved circuits will be between the boundaries specified by <code>depth</code></p>","parent_name":"GeneticConfiguration"},"Structs/GeneticConfiguration.html#/s:21SwiftQuantumComputing20GeneticConfigurationV15generationCountSivp":{"name":"generationCount","abstract":"<p>Maximum number of times a reproduction operation will be applied to increase the number of evolved circuits in a population</p>","parent_name":"GeneticConfiguration"},"Structs/GeneticConfiguration.html#/s:21SwiftQuantumComputing20GeneticConfigurationV14populationSizeSnySiGvp":{"name":"populationSize","abstract":"<p>Number of evolved circuits produced by a genetic algorithm will be between the boundaries specified by <code>populationSize</code>.","parent_name":"GeneticConfiguration"},"Structs/GeneticConfiguration.html#/s:21SwiftQuantumComputing20GeneticConfigurationV14tournamentSizeSivp":{"name":"tournamentSize","abstract":"<p>A reproduction operation is applied over a sub-set of the entire population of evolved circuits. <code>tournamentSize</code> is the","parent_name":"GeneticConfiguration"},"Structs/GeneticConfiguration.html#/s:21SwiftQuantumComputing20GeneticConfigurationV19mutationProbabilitySdvp":{"name":"mutationProbability","abstract":"<p>There are 2 reproduction operations: cross-over and mutation. <code>mutationProbability</code> is the probability of applying","parent_name":"GeneticConfiguration"},"Structs/GeneticConfiguration.html#/s:21SwiftQuantumComputing20GeneticConfigurationV9thresholdSdvp":{"name":"threshold","abstract":"<p>An evolved circuit is evaluated against multiple <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/GeneticUseCase.html\">GeneticUseCase</a></code> instances. Each evaluation returns a a score,","parent_name":"GeneticConfiguration"},"Structs/GeneticConfiguration.html#/s:21SwiftQuantumComputing20GeneticConfigurationV16errorProbabilitySdvp":{"name":"errorProbability","abstract":"<p>If the total score of an evolved circuit (i.e. the score considering all <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/GeneticUseCase.html\">GeneticUseCase</a></code> instances) is below","parent_name":"GeneticConfiguration"},"Structs/GeneticConfiguration.html#/s:21SwiftQuantumComputing20GeneticConfigurationV5depth15generationCount14populationSize010tournamentJ019mutationProbability9threshold05errorM0ACSnySiG_SiAKSiS3dtKcfc":{"name":"init(depth:generationCount:populationSize:tournamentSize:mutationProbability:threshold:errorProbability:)","abstract":"<p>Initialize a <code>GeneticConfiguration</code> instance</p>","parent_name":"GeneticConfiguration"},"Structs/RotationGate.html#/s:21SwiftQuantumComputing12RotationGateV4axis7radiansAcA0E0V4AxisO_Sdtcfc":{"name":"init(axis:radians:)","abstract":"<p>Initializes a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ConfigurableGate.html\">ConfigurableGate</a></code> instance with a rotation of <code>radians</code> around <code>axis</code>.</p>","parent_name":"RotationGate"},"Structs/RotationGate.html#/s:21SwiftQuantumComputing12RotationGateV9makeFixed6inputss6ResultOyAA0E0VAA18EvolveCircuitErrorOGSaySiG_tF":{"name":"makeFixed(inputs:)","abstract":"<p>Check <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ConfigurableGate.html#/s:21SwiftQuantumComputing16ConfigurableGateP9makeFixed6inputss6ResultOyAA0E0VAA18EvolveCircuitErrorOGSaySiG_tF\">ConfigurableGate.makeFixed(inputs:)</a></code></p>","parent_name":"RotationGate"},"Structs/PhaseShiftGate.html#/s:21SwiftQuantumComputing14PhaseShiftGateV7radiansACSd_tcfc":{"name":"init(radians:)","abstract":"<p>Initializes a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ConfigurableGate.html\">ConfigurableGate</a></code> instance with a given phase shift angle.</p>","parent_name":"PhaseShiftGate"},"Structs/PhaseShiftGate.html#/s:21SwiftQuantumComputing14PhaseShiftGateV9makeFixed6inputss6ResultOyAA0F0VAA18EvolveCircuitErrorOGSaySiG_tF":{"name":"makeFixed(inputs:)","abstract":"<p>Check <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ConfigurableGate.html#/s:21SwiftQuantumComputing16ConfigurableGateP9makeFixed6inputss6ResultOyAA0E0VAA18EvolveCircuitErrorOGSaySiG_tF\">ConfigurableGate.makeFixed(inputs:)</a></code></p>","parent_name":"PhaseShiftGate"},"Structs/OracleGate/InitError.html#/s:21SwiftQuantumComputing10OracleGateV9InitErrorO41truthTableQubitCountHasToBeBiggerThanZeroyA2EmF":{"name":"truthTableQubitCountHasToBeBiggerThanZero","abstract":"<p>Throwed when <code>truthTableQubitCount</code> is 0 or less</p>","parent_name":"InitError"},"Structs/OracleGate/InitError.html":{"name":"InitError","abstract":"<p>Errors throwed by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/OracleGate.html#/s:21SwiftQuantumComputing10OracleGateV10truthTable0fG10QubitCount4gateACSaySSG_SiAA012ConfigurableE0_ptKcfc\">OracleGate.init(truthTable:truthTableQubitCount:gate:)</a></code></p>","parent_name":"OracleGate"},"Structs/OracleGate.html#/s:21SwiftQuantumComputing10OracleGateV10truthTable0fG10QubitCount4gateACSaySSG_SiAA012ConfigurableE0_ptKcfc":{"name":"init(truthTable:truthTableQubitCount:gate:)","abstract":"<p>Initializes a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ConfigurableGate.html\">ConfigurableGate</a></code> instance with a given <code>truthTable</code> &amp; <code>gate</code>.</p>","parent_name":"OracleGate"},"Structs/OracleGate.html#/s:21SwiftQuantumComputing10OracleGateV9makeFixed6inputss6ResultOyAA0E0VAA18EvolveCircuitErrorOGSaySiG_tF":{"name":"makeFixed(inputs:)","abstract":"<p>Check <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ConfigurableGate.html#/s:21SwiftQuantumComputing16ConfigurableGateP9makeFixed6inputss6ResultOyAA0E0VAA18EvolveCircuitErrorOGSaySiG_tF\">ConfigurableGate.makeFixed(inputs:)</a></code></p>","parent_name":"OracleGate"},"Structs/NotGate.html#/s:21SwiftQuantumComputing7NotGateVACycfc":{"name":"init()","abstract":"<p>Initialize a <code>NotGate</code> instance</p>","parent_name":"NotGate"},"Structs/NotGate.html#/s:21SwiftQuantumComputing7NotGateV9makeFixed6inputss6ResultOyAA0E0VAA18EvolveCircuitErrorOGSaySiG_tF":{"name":"makeFixed(inputs:)","abstract":"<p>Check <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ConfigurableGate.html#/s:21SwiftQuantumComputing16ConfigurableGateP9makeFixed6inputss6ResultOyAA0E0VAA18EvolveCircuitErrorOGSaySiG_tF\">ConfigurableGate.makeFixed(inputs:)</a></code></p>","parent_name":"NotGate"},"Structs/MatrixGate/InitError.html#/s:21SwiftQuantumComputing10MatrixGateV9InitErrorO37matrixQubitCountHasToBeBiggerThanZeroyA2EmF":{"name":"matrixQubitCountHasToBeBiggerThanZero","abstract":"<p>Throwed when <code>matrix</code> is not able to handle at least 1 qubit</p>","parent_name":"InitError"},"Structs/MatrixGate/InitError.html":{"name":"InitError","abstract":"<p>Errors throwed by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/MatrixGate.html#/s:21SwiftQuantumComputing10MatrixGateV6matrixAcA0D0V_tKcfc\">MatrixGate.init(matrix:)</a></code></p>","parent_name":"MatrixGate"},"Structs/MatrixGate.html#/s:21SwiftQuantumComputing10MatrixGateV6matrixAcA0D0V_tKcfc":{"name":"init(matrix:)","abstract":"<p>Initializes a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ConfigurableGate.html\">ConfigurableGate</a></code> instance with a given <code>matrix</code>.</p>","parent_name":"MatrixGate"},"Structs/MatrixGate.html#/s:21SwiftQuantumComputing10MatrixGateV9makeFixed6inputss6ResultOyAA0E0VAA18EvolveCircuitErrorOGSaySiG_tF":{"name":"makeFixed(inputs:)","abstract":"<p>Check <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ConfigurableGate.html#/s:21SwiftQuantumComputing16ConfigurableGateP9makeFixed6inputss6ResultOyAA0E0VAA18EvolveCircuitErrorOGSaySiG_tF\">ConfigurableGate.makeFixed(inputs:)</a></code></p>","parent_name":"MatrixGate"},"Structs/HadamardGate.html#/s:21SwiftQuantumComputing12HadamardGateVACycfc":{"name":"init()","abstract":"<p>Initialize a <code>HadamardGate</code> instance</p>","parent_name":"HadamardGate"},"Structs/HadamardGate.html#/s:21SwiftQuantumComputing12HadamardGateV9makeFixed6inputss6ResultOyAA0E0VAA18EvolveCircuitErrorOGSaySiG_tF":{"name":"makeFixed(inputs:)","abstract":"<p>Check <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ConfigurableGate.html#/s:21SwiftQuantumComputing16ConfigurableGateP9makeFixed6inputss6ResultOyAA0E0VAA18EvolveCircuitErrorOGSaySiG_tF\">ConfigurableGate.makeFixed(inputs:)</a></code></p>","parent_name":"HadamardGate"},"Structs/ControlledGate/InitError.html#/s:21SwiftQuantumComputing14ControlledGateV9InitErrorO33controlCountHasToBeBiggerThanZeroyA2EmF":{"name":"controlCountHasToBeBiggerThanZero","abstract":"<p>Throwed when <code>controlCount</code> is 0 or less</p>","parent_name":"InitError"},"Structs/ControlledGate/InitError.html":{"name":"InitError","abstract":"<p>Errors throwed by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ControlledGate.html#/s:21SwiftQuantumComputing14ControlledGateV4gate12controlCountAcA012ConfigurableE0_p_SitKcfc\">ControlledGate.init(gate:controlCount:)</a></code></p>","parent_name":"ControlledGate"},"Structs/ControlledGate.html#/s:21SwiftQuantumComputing14ControlledGateV4gate12controlCountAcA012ConfigurableE0_p_SitKcfc":{"name":"init(gate:controlCount:)","abstract":"<p>Initializes a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ConfigurableGate.html\">ConfigurableGate</a></code> instance with a given <code>gate</code>.</p>","parent_name":"ControlledGate"},"Structs/ControlledGate.html#/s:21SwiftQuantumComputing14ControlledGateV9makeFixed6inputss6ResultOyAA0E0VAA18EvolveCircuitErrorOGSaySiG_tF":{"name":"makeFixed(inputs:)","abstract":"<p>Check <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ConfigurableGate.html#/s:21SwiftQuantumComputing16ConfigurableGateP9makeFixed6inputss6ResultOyAA0E0VAA18EvolveCircuitErrorOGSaySiG_tF\">ConfigurableGate.makeFixed(inputs:)</a></code></p>","parent_name":"ControlledGate"},"Structs/EuclideanSolver.html#/s:21SwiftQuantumComputing15EuclideanSolverV25findGreatestCommonDivisoryS2i_SitFZ":{"name":"findGreatestCommonDivisor(_:_:)","abstract":"<p>Finds the Greatest Common Divisor (GCD) of <code>a</code> and <code>b</code>.</p>","parent_name":"EuclideanSolver"},"Structs/ContinuedFractionsSolver/FindApproximationError.html#/s:21SwiftQuantumComputing24ContinuedFractionsSolverV22FindApproximationErrorO26limitHasToBeBiggerThanZeroyA2EmF":{"name":"limitHasToBeBiggerThanZero","abstract":"<p>Throwed if <code>limit</code> is zero or negative. Notice that a <code>limit</code> equal to zero, the approximation is the same","parent_name":"FindApproximationError"},"Structs/ContinuedFractionsSolver/FindApproximationError.html#/s:21SwiftQuantumComputing24ContinuedFractionsSolverV22FindApproximationErrorO26valueHasToBeBiggerThanZeroyA2EmF":{"name":"valueHasToBeBiggerThanZero","abstract":"<p>Throwed if <code>value</code> is zero or negative. Notice that the only possible approximation for zero is zero</p>","parent_name":"FindApproximationError"},"Structs/ContinuedFractionsSolver/FindApproximationError.html":{"name":"FindApproximationError","abstract":"<p>Errors throwed by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ContinuedFractionsSolver.html#/s:21SwiftQuantumComputing24ContinuedFractionsSolverV17findApproximation2of22differenceBelowOrEquals6ResultOyAA8RationalVAC04FindH5ErrorOGAJ_AJtFZ\">ContinuedFractionsSolver.findApproximation(of:differenceBelowOrEqual:)</a></code></p>","parent_name":"ContinuedFractionsSolver"},"Structs/ContinuedFractionsSolver.html#/s:21SwiftQuantumComputing24ContinuedFractionsSolverV17findApproximation2of22differenceBelowOrEquals6ResultOyAA8RationalVAC04FindH5ErrorOGAJ_AJtFZ":{"name":"findApproximation(of:differenceBelowOrEqual:)","abstract":"<p>Finds an approximation to a <code>value</code> with a difference below <code>limit</code>.</p>","parent_name":"ContinuedFractionsSolver"},"Structs/ContinuedFractionsSolver.html":{"name":"ContinuedFractionsSolver","abstract":"<p><a href=\"https://en.wikipedia.org/wiki/Continued_fraction\">Continued Fractions</a> can be used to find an"},"Structs/EuclideanSolver.html":{"name":"EuclideanSolver","abstract":"<p>Euclidean algorithm is a method for computing the Greatest Common Divisor of two numbers</p>"},"Structs/ControlledGate.html":{"name":"ControlledGate","abstract":"<p>A quantum gate used on genetic programming: Controlled</p>"},"Structs/HadamardGate.html":{"name":"HadamardGate","abstract":"<p>A quantum gate used on genetic programming: Hadamard</p>"},"Structs/MatrixGate.html":{"name":"MatrixGate","abstract":"<p>A quantum gate used on genetic programming: Matrix</p>"},"Structs/NotGate.html":{"name":"NotGate","abstract":"<p>A quantum gate used on genetic programming: Not</p>"},"Structs/OracleGate.html":{"name":"OracleGate","abstract":"<p>A quantum gate used on genetic programming: Oracle</p>"},"Structs/PhaseShiftGate.html":{"name":"PhaseShiftGate","abstract":"<p>A quantum gate used on genetic programming: PhaseShift</p>"},"Structs/RotationGate.html":{"name":"RotationGate","abstract":"<p>A quantum gate used on genetic programming: Rotation</p>"},"Structs/GeneticConfiguration.html":{"name":"GeneticConfiguration","abstract":"<p>Configuration of a genetic algorithm to evolve a quantum circuit</p>"},"Structs/GeneticUseCase.html":{"name":"GeneticUseCase","abstract":"<p>A genetic algorithm looks for a quantum circuit that includes a <code>Gate.oracle(truthTable:target:controls:)</code>"},"Structs/MainGeneticFactory.html":{"name":"MainGeneticFactory","abstract":"<p>Undocumented</p>"},"Structs/MainTwoLevelDecompositionSolverFactory.html":{"name":"MainTwoLevelDecompositionSolverFactory","abstract":"<p>Conforms <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/TwoLevelDecompositionSolverFactory.html\">TwoLevelDecompositionSolverFactory</a></code>. Use to create new <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/TwoLevelDecompositionSolver.html\">TwoLevelDecompositionSolver</a></code> instances</p>"},"Structs/MainXorGaussianEliminationSolverFactory.html":{"name":"MainXorGaussianEliminationSolverFactory","abstract":"<p>Conforms <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/XorGaussianEliminationSolverFactory.html\">XorGaussianEliminationSolverFactory</a></code>. Use to create new <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/XorGaussianEliminationSolver.html\">XorGaussianEliminationSolver</a></code> instances</p>"},"Structs/MainCircuitDensityMatrixFactory.html":{"name":"MainCircuitDensityMatrixFactory","abstract":"<p>Conforms <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CircuitDensityMatrixFactory.html\">CircuitDensityMatrixFactory</a></code>. Use to create new <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CircuitDensityMatrix.html\">CircuitDensityMatrix</a></code> instances</p>"},"Structs/MainCircuitFactory.html":{"name":"MainCircuitFactory","abstract":"<p>Conforms <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CircuitFactory.html\">CircuitFactory</a></code>. Use to create new <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Circuit.html\">Circuit</a></code> instances</p>"},"Structs/MainNoiseCircuitFactory.html":{"name":"MainNoiseCircuitFactory","abstract":"<p>Conforms <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/NoiseCircuitFactory.html\">NoiseCircuitFactory</a></code>. Use to create new <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/NoiseCircuit.html\">NoiseCircuit</a></code> instances</p>"},"Structs/MainCircuitStatevectorFactory.html":{"name":"MainCircuitStatevectorFactory","abstract":"<p>Conforms <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CircuitStatevectorFactory.html\">CircuitStatevectorFactory</a></code>. Use to create new <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CircuitStatevector.html\">CircuitStatevector</a></code> instances</p>"},"Structs/Matrix.html":{"name":"Matrix","abstract":"<p>Swift representation of a complex 2-dimensional matrix</p>"},"Structs/Vector.html":{"name":"Vector","abstract":"<p>Swift representation of a complex &ldquo;column&rdquo; vector</p>"},"Structs/Gate.html":{"name":"Gate","abstract":"<p>A generic quantum gate</p>"},"Structs/MainDrawerFactory.html":{"name":"MainDrawerFactory","abstract":"<p>Undocumented</p>"},"Structs/Rational.html":{"name":"Rational","abstract":"<p>Swift representation of a rational number</p>"},"Structs/Noise.html":{"name":"Noise","abstract":"<p>A generic quantum noise operator</p>"},"Structs/QuantumOperator.html":{"name":"QuantumOperator","abstract":"<p>A generic quantum operator</p>"},"Protocols/SimplifiedQuantumOperatorConvertible.html#/s:21SwiftQuantumComputing010SimplifiedB19OperatorConvertibleP010simplifiedbE0AA0dbE0Ovp":{"name":"simplifiedQuantumOperator","abstract":"<p>Simplified representation of the quantum operator</p>","parent_name":"SimplifiedQuantumOperatorConvertible"},"Protocols/QuantumOperatorConvertible.html#/s:21SwiftQuantumComputing0B19OperatorConvertibleP07quantumD0AA0bD0Vvp":{"name":"quantumOperator","abstract":"<p>Equivalent representation of the instance as a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/QuantumOperator.html\">QuantumOperator</a></code></p>","parent_name":"QuantumOperatorConvertible"},"Protocols/SimplifiedNoiseConvertible.html#/s:21SwiftQuantumComputing26SimplifiedNoiseConvertibleP010simplifiedE0AA0dE0Ovp":{"name":"simplifiedNoise","abstract":"<p>Simplified representation of the noise operator</p>","parent_name":"SimplifiedNoiseConvertible"},"Protocols/SimplifiedGateConvertible.html#/s:21SwiftQuantumComputing25SimplifiedGateConvertibleP010simplifiedE0AA0dE0Ovp":{"name":"simplifiedGate","abstract":"<p>Simplified representation of the gate</p>","parent_name":"SimplifiedGateConvertible"},"Protocols/DrawerFactory.html#/s:21SwiftQuantumComputing13DrawerFactoryP04makeD0AA8Drawable_pyF":{"name":"makeDrawer()","abstract":"<p>Returns a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Drawable.html\">Drawable</a></code> instance</p>","parent_name":"DrawerFactory"},"Protocols/Drawable.html#/s:21SwiftQuantumComputing8DrawableP11drawCircuit_10qubitCounts6ResultOySo6NSViewCAA04DrawF5ErrorOGSayAA4GateVG_SitF":{"name":"drawCircuit(_:qubitCount:)","abstract":"<p>Prints a <code>circuit</code> with the given <code>qubitCount</code> in a view.</p>","parent_name":"Drawable"},"Protocols/Drawable.html#/s:21SwiftQuantumComputing8DrawablePAAE11drawCircuitys6ResultOySo6NSViewCAA04DrawF5ErrorOGSayAA4GateVGF":{"name":"drawCircuit(_:)","abstract":"<p>Prints a <code>circuit</code> in a view.</p>","parent_name":"Drawable"},"Protocols/CircuitStatevectorFactory.html#/s:21SwiftQuantumComputing25CircuitStatevectorFactoryP04makeE06vectors6ResultOyAA0dE0_pAA04MakeE5ErrorOGAA6VectorV_tF":{"name":"makeStatevector(vector:)","abstract":"<p>Builds <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CircuitStatevector.html\">CircuitStatevector</a></code> instances.</p>","parent_name":"CircuitStatevectorFactory"},"Protocols/CircuitStatevectorFactory.html#/s:21SwiftQuantumComputing25CircuitStatevectorFactoryPAAE04makeE04bitss6ResultOyAA0dE0_pAA04MakeE9BitsErrorOGSS_tF":{"name":"makeStatevector(bits:)","abstract":"<p>Builds <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CircuitStatevector.html\">CircuitStatevector</a></code> instances.</p>","parent_name":"CircuitStatevectorFactory"},"Protocols/CircuitStatevector.html#/s:21SwiftQuantumComputing18CircuitStatevectorP11statevectorAA6VectorVvp":{"name":"statevector","abstract":"<p>State of a quantum circuit expressed as a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Vector.html\">Vector</a></code> of <code>Complex</code> numbers</p>","parent_name":"CircuitStatevector"},"Protocols/CircuitStatevector.html#/s:21SwiftQuantumComputing18CircuitStatevectorPAAE13densityMatrixAA0d7DensityG0_pyF":{"name":"densityMatrix()","abstract":"<p>Transforms the circuit state into an equivalent <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CircuitDensityMatrix.html\">CircuitDensityMatrix</a></code> instance.</p>","parent_name":"CircuitStatevector"},"Protocols/CircuitProbabilities.html#/s:21SwiftQuantumComputing20CircuitProbabilitiesP13probabilitiesSaySdGyF":{"name":"probabilities()","abstract":"<p>Returns the probabilities of each possible combinations of qubits.</p>","parent_name":"CircuitProbabilities"},"Protocols/CircuitProbabilities.html#/s:21SwiftQuantumComputing20CircuitProbabilitiesPAAE11GroupedProba":{"name":"GroupedProb","abstract":"<p>Check value returned by","parent_name":"CircuitProbabilities"},"Protocols/CircuitProbabilities.html#/s:21SwiftQuantumComputing20CircuitProbabilitiesPAAE07groupedE08byQubits012summarizedByH030roundingSummaryToDecimalPlacess6ResultOySDySSSd11probability_SDySSSdG7summarytGAA07GroupedE5ErrorOGSaySiG_AQSiSgtF":{"name":"groupedProbabilities(byQubits:summarizedByQubits:roundingSummaryToDecimalPlaces:)","abstract":"<p>Returns the probability of each possible combination of qubits in <code>groupQubits</code>. For each of these combinations, it also lists","parent_name":"CircuitProbabilities"},"Protocols/CircuitProbabilities.html#/s:21SwiftQuantumComputing20CircuitProbabilitiesPAAE07groupedE08byQubits012summarizedByH030roundingSummaryToDecimalPlacess6ResultOySDySSSd11probability_SDySSSdG7summarytGAA07GroupedE5ErrorOGSaySiG_SnySiGSiSgtF":{"name":"groupedProbabilities(byQubits:summarizedByQubits:roundingSummaryToDecimalPlaces:)","abstract":"<p>Returns the probability of each possible combination of qubits in <code>groupQubits</code>. For each of these combinations, it also lists","parent_name":"CircuitProbabilities"},"Protocols/CircuitProbabilities.html#/s:21SwiftQuantumComputing20CircuitProbabilitiesPAAE07groupedE08byQubits012summarizedByH030roundingSummaryToDecimalPlacess6ResultOySDySSSd11probability_SDySSSdG7summarytGAA07GroupedE5ErrorOGSaySiG_SNySiGSiSgtF":{"name":"groupedProbabilities(byQubits:summarizedByQubits:roundingSummaryToDecimalPlaces:)","abstract":"<p>Returns the probability of each possible combination of qubits in <code>groupQubits</code>. For each of these combinations, it also lists","parent_name":"CircuitProbabilities"},"Protocols/CircuitProbabilities.html#/s:21SwiftQuantumComputing20CircuitProbabilitiesPAAE07groupedE08byQubits012summarizedByH030roundingSummaryToDecimalPlacess6ResultOySDySSSd11probability_SDySSSdG7summarytGAA07GroupedE5ErrorOGSnySiG_SaySiGSiSgtF":{"name":"groupedProbabilities(byQubits:summarizedByQubits:roundingSummaryToDecimalPlaces:)","abstract":"<p>Returns the probability of each possible combination of qubits in <code>groupQubits</code>. For each of these combinations, it also lists","parent_name":"CircuitProbabilities"},"Protocols/CircuitProbabilities.html#/s:21SwiftQuantumComputing20CircuitProbabilitiesPAAE07groupedE08byQubits012summarizedByH030roundingSummaryToDecimalPlacess6ResultOySDySSSd11probability_SDySSSdG7summarytGAA07GroupedE5ErrorOGSnySiG_AQSiSgtF":{"name":"groupedProbabilities(byQubits:summarizedByQubits:roundingSummaryToDecimalPlaces:)","abstract":"<p>Returns the probability of each possible combination of qubits in <code>groupQubits</code>. For each of these combinations, it also lists","parent_name":"CircuitProbabilities"},"Protocols/CircuitProbabilities.html#/s:21SwiftQuantumComputing20CircuitProbabilitiesPAAE07groupedE08byQubits012summarizedByH030roundingSummaryToDecimalPlacess6ResultOySDySSSd11probability_SDySSSdG7summarytGAA07GroupedE5ErrorOGSnySiG_SNySiGSiSgtF":{"name":"groupedProbabilities(byQubits:summarizedByQubits:roundingSummaryToDecimalPlaces:)","abstract":"<p>Returns the probability of each possible combination of qubits in <code>groupQubits</code>. For each of these combinations, it also lists","parent_name":"CircuitProbabilities"},"Protocols/CircuitProbabilities.html#/s:21SwiftQuantumComputing20CircuitProbabilitiesPAAE07groupedE08byQubits012summarizedByH030roundingSummaryToDecimalPlacess6ResultOySDySSSd11probability_SDySSSdG7summarytGAA07GroupedE5ErrorOGSNySiG_SaySiGSiSgtF":{"name":"groupedProbabilities(byQubits:summarizedByQubits:roundingSummaryToDecimalPlaces:)","abstract":"<p>Returns the probability of each possible combination of qubits in <code>groupQubits</code>. For each of these combinations, it also lists","parent_name":"CircuitProbabilities"},"Protocols/CircuitProbabilities.html#/s:21SwiftQuantumComputing20CircuitProbabilitiesPAAE07groupedE08byQubits012summarizedByH030roundingSummaryToDecimalPlacess6ResultOySDySSSd11probability_SDySSSdG7summarytGAA07GroupedE5ErrorOGSNySiG_SnySiGSiSgtF":{"name":"groupedProbabilities(byQubits:summarizedByQubits:roundingSummaryToDecimalPlaces:)","abstract":"<p>Returns the probability of each possible combination of qubits in <code>groupQubits</code>. For each of these combinations, it also lists","parent_name":"CircuitProbabilities"},"Protocols/CircuitProbabilities.html#/s:21SwiftQuantumComputing20CircuitProbabilitiesPAAE07groupedE08byQubits012summarizedByH030roundingSummaryToDecimalPlacess6ResultOySDySSSd11probability_SDySSSdG7summarytGAA07GroupedE5ErrorOGSNySiG_AQSiSgtF":{"name":"groupedProbabilities(byQubits:summarizedByQubits:roundingSummaryToDecimalPlaces:)","abstract":"<p>Returns the probability of each possible combination of qubits in <code>groupQubits</code>. For each of these combinations, it also lists","parent_name":"CircuitProbabilities"},"Protocols/CircuitProbabilities.html#/s:21SwiftQuantumComputing20CircuitProbabilitiesPAAE010summarizedE0SDySSSdGyF":{"name":"summarizedProbabilities()","abstract":"<p>Returns the probability of each possible combination of qubits bigger than 0.</p>","parent_name":"CircuitProbabilities"},"Protocols/CircuitProbabilities.html#/s:21SwiftQuantumComputing20CircuitProbabilitiesPAAE010summarizedE08byQubitss6ResultOySDySSSdGAA010SummarizedE5ErrorOGSaySiG_tF":{"name":"summarizedProbabilities(byQubits:)","abstract":"<p>Returns the probability of each possible combination of qubits in <code>qubits</code> bigger than 0.</p>","parent_name":"CircuitProbabilities"},"Protocols/CircuitProbabilities.html#/s:21SwiftQuantumComputing20CircuitProbabilitiesPAAE010summarizedE08byQubitss6ResultOySDySSSdGAA010SummarizedE5ErrorOGSnySiG_tF":{"name":"summarizedProbabilities(byQubits:)","abstract":"<p>Returns the probability of each possible combination of qubits in <code>qubits</code> bigger than 0.</p>","parent_name":"CircuitProbabilities"},"Protocols/CircuitProbabilities.html#/s:21SwiftQuantumComputing20CircuitProbabilitiesPAAE010summarizedE08byQubitss6ResultOySDySSSdGAA010SummarizedE5ErrorOGSNySiG_tF":{"name":"summarizedProbabilities(byQubits:)","abstract":"<p>Returns the probability of each possible combination of qubits in <code>qubits</code> bigger than 0.</p>","parent_name":"CircuitProbabilities"},"Protocols/NoiseCircuitFactory.html#/s:21SwiftQuantumComputing19NoiseCircuitFactoryP04makedE016quantumOperatorsAA0dE0_pSayAA0B8OperatorVG_tF":{"name":"makeNoiseCircuit(quantumOperators:)","abstract":"<p>Builds <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/NoiseCircuit.html\">NoiseCircuit</a></code> instances.</p>","parent_name":"NoiseCircuitFactory"},"Protocols/NoiseCircuit.html#/s:21SwiftQuantumComputing12NoiseCircuitP16quantumOperatorsSayAA0B8OperatorVGvp":{"name":"quantumOperators","abstract":"<p>Quantum operators in the circuit</p>","parent_name":"NoiseCircuit"},"Protocols/NoiseCircuit.html#/s:21SwiftQuantumComputing12NoiseCircuitP13densityMatrix16withInitialStates6ResultOyAA0e7DensityG0_pAA0lG5ErrorOGAaH_p_tF":{"name":"densityMatrix(withInitialState:)","abstract":"<p>Applies <code>gates</code> to <code>initialState</code> to produce a new density matrix.</p>","parent_name":"NoiseCircuit"},"Protocols/NoiseCircuit.html#/s:21SwiftQuantumComputing12NoiseCircuitPAAE13densityMatrix11withFactorys6ResultOyAA0e7DensityG0_pAA0kG5ErrorOGAA0ekgI0_p_tF":{"name":"densityMatrix(withFactory:)","abstract":"<p>Applies <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/NoiseCircuit.html#/s:21SwiftQuantumComputing12NoiseCircuitP16quantumOperatorsSayAA0B8OperatorVGvp\">quantumOperators</a></code> to an initial state set to 0 to produce a new density matrix.</p>","parent_name":"NoiseCircuit"},"Protocols/CircuitDensityMatrixFactory.html#/s:21SwiftQuantumComputing27CircuitDensityMatrixFactoryP04makeeF06matrixs6ResultOyAA0deF0_pAA04MakeeF5ErrorOGAA0F0V_tF":{"name":"makeDensityMatrix(matrix:)","abstract":"<p>Builds <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CircuitDensityMatrix.html\">CircuitDensityMatrix</a></code> instances.</p>","parent_name":"CircuitDensityMatrixFactory"},"Protocols/CircuitDensityMatrix.html#/s:21SwiftQuantumComputing20CircuitDensityMatrixP07densityF0AA0F0Vvp":{"name":"densityMatrix","abstract":"<p>State of a quantum circuit expressed as a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Matrix.html\">Matrix</a></code> of <code>Complex</code> numbers</p>","parent_name":"CircuitDensityMatrix"},"Protocols/CircuitFactory.html#/s:21SwiftQuantumComputing14CircuitFactoryP04makeD05gatesAA0D0_pSayAA4GateVG_tF":{"name":"makeCircuit(gates:)","abstract":"<p>Builds <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Circuit.html\">Circuit</a></code> instances.</p>","parent_name":"CircuitFactory"},"Protocols/Circuit.html#/s:21SwiftQuantumComputing7CircuitP5gatesSayAA4GateVGvp":{"name":"gates","abstract":"<p>Gates in the circuit</p>","parent_name":"Circuit"},"Protocols/Circuit.html#/s:21SwiftQuantumComputing7CircuitP7unitary14withQubitCounts6ResultOyAA6MatrixVAA12UnitaryErrorOGSi_tF":{"name":"unitary(withQubitCount:)","abstract":"<p>Produces unitary matrix that represents entire list of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Circuit.html#/s:21SwiftQuantumComputing7CircuitP5gatesSayAA4GateVGvp\">gates</a></code>.</p>","parent_name":"Circuit"},"Protocols/Circuit.html#/s:21SwiftQuantumComputing7CircuitP11statevector16withInitialStates6ResultOyAA0D11Statevector_pAA0J5ErrorOGAaH_p_tF":{"name":"statevector(withInitialState:)","abstract":"<p>Applies <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Circuit.html#/s:21SwiftQuantumComputing7CircuitP5gatesSayAA4GateVGvp\">gates</a></code> to <code>initialState</code> to produce a new statevector.</p>","parent_name":"Circuit"},"Protocols/Circuit.html#/s:21SwiftQuantumComputing7CircuitPAAE11statevector11withFactorys6ResultOyAA0D11Statevector_pAA0I5ErrorOGAA0diG0_p_tF":{"name":"statevector(withFactory:)","abstract":"<p>Applies <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Circuit.html#/s:21SwiftQuantumComputing7CircuitP5gatesSayAA4GateVGvp\">gates</a></code> to an initial statevector set to 0 to produce a new statevector.</p>","parent_name":"Circuit"},"Protocols/Circuit.html#/s:21SwiftQuantumComputing7CircuitPAAE7unitarys6ResultOyAA6MatrixVAA12UnitaryErrorOGyF":{"name":"unitary()","abstract":"<p>Produces unitary matrix that represents entire list of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Circuit.html#/s:21SwiftQuantumComputing7CircuitP5gatesSayAA4GateVGvp\">gates</a></code>.</p>","parent_name":"Circuit"},"Protocols/XorGaussianEliminationSolverFactory.html#/s:21SwiftQuantumComputing35XorGaussianEliminationSolverFactoryP04makeG0AA0defG0_pyF":{"name":"makeSolver()","abstract":"<p>Builds <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/XorGaussianEliminationSolver.html\">XorGaussianEliminationSolver</a></code> instances</p>","parent_name":"XorGaussianEliminationSolverFactory"},"Protocols/XorGaussianEliminationSolver.html#/s:21SwiftQuantumComputing28XorGaussianEliminationSolverP33findActivatedVariablesInEquationsySaySaySiGGShyShySiGGF":{"name":"findActivatedVariablesInEquations(_:)","abstract":"<p>Find all possible solutions for a system of XOR equations.</p>","parent_name":"XorGaussianEliminationSolver"},"Protocols/TwoLevelDecompositionSolverFactory.html#/s:21SwiftQuantumComputing34TwoLevelDecompositionSolverFactoryP04makeG0AA0defG0_pyF":{"name":"makeSolver()","abstract":"<p>Builds <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/TwoLevelDecompositionSolver.html\">TwoLevelDecompositionSolver</a></code> instances</p>","parent_name":"TwoLevelDecompositionSolverFactory"},"Protocols/TwoLevelDecompositionSolver.html#/s:21SwiftQuantumComputing27TwoLevelDecompositionSolverP13decomposeGate_29restrictedToCircuitQubitCounts6ResultOySayAA0I0VGAA0B13OperatorErrorOGAI_SitF":{"name":"decomposeGate(_:restrictedToCircuitQubitCount:)","abstract":"<p>Decompose <code>gate</code> into a sequence of fully controlled two-level matrix gates and not gates.</p>","parent_name":"TwoLevelDecompositionSolver"},"Protocols/TwoLevelDecompositionSolver.html#/s:21SwiftQuantumComputing27TwoLevelDecompositionSolverPAAE14decomposeGates_29restrictedToCircuitQubitCounts6ResultOySayAA4GateVGAA09DecomposeI5ErrorOGAJ_SitF":{"name":"decomposeGates(_:restrictedToCircuitQubitCount:)","abstract":"<p>Decompose one by one each instance in <code>gates</code> to produce an equivalent  sequence of","parent_name":"TwoLevelDecompositionSolver"},"Protocols/TwoLevelDecompositionSolver.html#/s:21SwiftQuantumComputing27TwoLevelDecompositionSolverPAAE14decomposeGatesys6ResultOySayAA4GateVGAA09DecomposeI5ErrorOGAIF":{"name":"decomposeGates(_:)","abstract":"<p>Decompose one by one each instance in <code>gates</code> to produce an equivalent  sequence of","parent_name":"TwoLevelDecompositionSolver"},"Protocols/GeneticFactory.html#/s:21SwiftQuantumComputing14GeneticFactoryP14EvolvedCircuita":{"name":"EvolvedCircuit","abstract":"<p>Result type returned by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/GeneticFactory.html#/s:21SwiftQuantumComputing14GeneticFactoryP13evolveCircuit13configuration8useCases5gatess6ResultOySd4eval_SayAA4GateVGAGSiSg8oracleAttAA06EvolveG5ErrorOGAA0D13ConfigurationV_SayAA0D7UseCaseVGSayAA012ConfigurableN0_pGtF\">GeneticFactory.evolveCircuit(configuration:useCases:gates:)</a></code>.</p>","parent_name":"GeneticFactory"},"Protocols/GeneticFactory.html#/s:21SwiftQuantumComputing14GeneticFactoryP13evolveCircuit13configuration8useCases5gatess6ResultOySd4eval_SayAA4GateVGAGSiSg8oracleAttAA06EvolveG5ErrorOGAA0D13ConfigurationV_SayAA0D7UseCaseVGSayAA012ConfigurableN0_pGtF":{"name":"evolveCircuit(configuration:useCases:gates:)","abstract":"<p>Look for a quantum circuit that solves a list of <code>useCases</code> using only <code>gates</code> and the parameter informed in the","parent_name":"GeneticFactory"},"Protocols/ConfigurableGate.html#/s:21SwiftQuantumComputing16ConfigurableGateP9makeFixed6inputss6ResultOyAA0E0VAA18EvolveCircuitErrorOGSaySiG_tF":{"name":"makeFixed(inputs:)","abstract":"<p>Produces a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Gate.html\">Gate</a></code> instance using as many <code>inputs</code> as necessary to configure it.</p>","parent_name":"ConfigurableGate"},"Protocols/ConfigurableGate.html":{"name":"ConfigurableGate","abstract":"<p>A quantum gate used on genetic programming</p>"},"Protocols/GeneticFactory.html":{"name":"GeneticFactory","abstract":"<p>A genetic algorithm to find a quantum circuit that includes a <code>Gate.oracle(truthTable:target:controls:)</code>"},"Protocols/TwoLevelDecompositionSolver.html":{"name":"TwoLevelDecompositionSolver","abstract":"<p>A quantum gate can be decomposed into a sequence of fully controlled two-level matrix gates and not gates."},"Protocols/TwoLevelDecompositionSolverFactory.html":{"name":"TwoLevelDecompositionSolverFactory","abstract":"<p>Factory to build <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/TwoLevelDecompositionSolver.html\">TwoLevelDecompositionSolver</a></code> instances</p>"},"Protocols/XorGaussianEliminationSolver.html":{"name":"XorGaussianEliminationSolver","abstract":"<p>Implementation of Gaussian elimination algorithm for system of XOR equations, i.e. equations like the following:"},"Protocols/XorGaussianEliminationSolverFactory.html":{"name":"XorGaussianEliminationSolverFactory","abstract":"<p>Factory to build <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/XorGaussianEliminationSolver.html\">XorGaussianEliminationSolver</a></code> instances</p>"},"Protocols/Circuit.html":{"name":"Circuit","abstract":"<p>A quantum circuit</p>"},"Protocols/CircuitFactory.html":{"name":"CircuitFactory","abstract":"<p>Factory to build <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Circuit.html\">Circuit</a></code> instances</p>"},"Protocols/CircuitDensityMatrix.html":{"name":"CircuitDensityMatrix","abstract":"<p>A circuit density matrix</p>"},"Protocols/CircuitDensityMatrixFactory.html":{"name":"CircuitDensityMatrixFactory","abstract":"<p>Factory to build <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CircuitDensityMatrix.html\">CircuitDensityMatrix</a></code> instances</p>"},"Protocols/NoiseCircuit.html":{"name":"NoiseCircuit","abstract":"<p>A quantum circuit with noise</p>"},"Protocols/NoiseCircuitFactory.html":{"name":"NoiseCircuitFactory","abstract":"<p>Factory to build <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/NoiseCircuit.html\">NoiseCircuit</a></code> instances</p>"},"Protocols/CircuitProbabilities.html":{"name":"CircuitProbabilities","abstract":"<p>Probabilities of each possible combinations of qubits</p>"},"Protocols/CircuitStatevector.html":{"name":"CircuitStatevector","abstract":"<p>A quantum circuit state</p>"},"Protocols/CircuitStatevectorFactory.html":{"name":"CircuitStatevectorFactory","abstract":"<p>Factory to build <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CircuitStatevector.html\">CircuitStatevector</a></code> instances</p>"},"Protocols/Drawable.html":{"name":"Drawable","abstract":"<p>Print/draw a quantum circuit</p>"},"Protocols/DrawerFactory.html":{"name":"DrawerFactory","abstract":"<p>Factory to build <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Drawable.html\">Drawable</a></code> instances</p>"},"Protocols/SimplifiedGateConvertible.html":{"name":"SimplifiedGateConvertible","abstract":"<p>A type with a simplified representation of a quantum gate</p>"},"Protocols/SimplifiedNoiseConvertible.html":{"name":"SimplifiedNoiseConvertible","abstract":"<p>A type with a simplified representation of a noise operator</p>"},"Protocols/QuantumOperatorConvertible.html":{"name":"QuantumOperatorConvertible","abstract":"<p>Get equivalent representation of an instance as a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/QuantumOperator.html\">QuantumOperator</a></code></p>"},"Protocols/SimplifiedQuantumOperatorConvertible.html":{"name":"SimplifiedQuantumOperatorConvertible","abstract":"<p>A type with a simplified representation of a quantum operator</p>"},"Extensions/String.html#/s:SS21SwiftQuantumComputingE1aoiySSSgSS_SStFZ":{"name":"&(_:_:)","abstract":"<p>Applies AND to two bit strings</p>","parent_name":"String"},"Extensions/String.html#/s:SS21SwiftQuantumComputingE6bitXorSbSgyF":{"name":"bitXor()","abstract":"<p>Returns the result of combining the bits in the bit string using XOR</p>","parent_name":"String"},"Extensions/String.html#/s:SS21SwiftQuantumComputingE6bitXorySSSgSS_SStFZ":{"name":"bitXor(_:_:)","abstract":"<p>Applies XOR to two bit strings</p>","parent_name":"String"},"Extensions/String.html#/s:SS21SwiftQuantumComputingE_8bitCountSSSi_Sitcfc":{"name":"init(_:bitCount:)","abstract":"<p>Given a <code>value</code>, returns its bit string representation with <code>bitCount</code> length</p>","parent_name":"String"},"Extensions/String.html#/s:SS21SwiftQuantumComputingE_4bitsSSSi_SaySiGtcfc":{"name":"init(_:bits:)","abstract":"<p>Given a <code>value</code>, transforms it into its bit string representation and extract <code>bits</code> from it</p>","parent_name":"String"},"Extensions/Int/DivisionType.html#/s:Si21SwiftQuantumComputingE12DivisionTypeO9euclideanyA2CmF":{"name":"euclidean","abstract":"<p>Euclidean division</p>","parent_name":"DivisionType"},"Extensions/Int/DivisionType.html#/s:Si21SwiftQuantumComputingE12DivisionTypeO7flooredyA2CmF":{"name":"floored","abstract":"<p>Floored division</p>","parent_name":"DivisionType"},"Extensions/Int/DivisionType.html#/s:Si21SwiftQuantumComputingE12DivisionTypeO5swiftyA2CmF":{"name":"swift","abstract":"<p>Swift standard division</p>","parent_name":"DivisionType"},"Extensions/Int.html#/s:Si21SwiftQuantumComputingE3powyS2i_SitFZ":{"name":"pow(_:_:)","abstract":"<p>Returns a <code>base</code> raised to a given <code>exp</code></p>","parent_name":"Int"},"Extensions/Int/DivisionType.html":{"name":"DivisionType","abstract":"<p>Type of division used in <code><a href=\"36f8f5912051ae747ef441d6511ca4cbExtensions/Int.html#/s:Si21SwiftQuantumComputingE20quotientAndRemainder10dividingBy8divisionSi0D0_Si9remaindertSi_SiAAE12DivisionTypeOtF\">Int.quotientAndRemainder(dividingBy:division:)</a></code></p>","parent_name":"Int"},"Extensions/Int.html#/s:Si21SwiftQuantumComputingE20quotientAndRemainder10dividingBy8divisionSi0D0_Si9remaindertSi_SiAAE12DivisionTypeOtF":{"name":"quotientAndRemainder(dividingBy:division:)","abstract":"<p>Returns the quotient and remainder of this value after <code>division</code> by <code>other</code>.</p>","parent_name":"Int"},"Extensions/Double.html#/s:Sd21SwiftQuantumComputingE7rounded15toDecimalPlacesSdSi_tF":{"name":"rounded(toDecimalPlaces:)","abstract":"<p>Returns this value rounded to a number of decimal places</p>","parent_name":"Double"},"Extensions/Array.html#/s:Sa21SwiftQuantumComputingE14randomElements5countSayxGSi_tF":{"name":"randomElements(count:)","abstract":"<p>Returns <code>count</code> elements selected at random</p>","parent_name":"Array"},"Extensions/Array.html":{"name":"Array"},"Extensions/Double.html":{"name":"Double"},"Extensions/Int.html":{"name":"Int"},"Extensions/String.html":{"name":"String"},"Enums/SimplifiedQuantumOperator.html#/s:21SwiftQuantumComputing010SimplifiedB8OperatorO4gateyAcA0D4GateO_tcACmF":{"name":"gate(operator:)","abstract":"<p>Any <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/SimplifiedGate.html\">SimplifiedGate</a></code></p>","parent_name":"SimplifiedQuantumOperator"},"Enums/SimplifiedQuantumOperator.html#/s:21SwiftQuantumComputing010SimplifiedB8OperatorO5noiseyAcA0D5NoiseO_tcACmF":{"name":"noise(operator:)","abstract":"<p>Any <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/SimplifiedNoise.html\">SimplifiedNoise</a></code> operator</p>","parent_name":"SimplifiedQuantumOperator"},"Enums/QuantumOperatorError.html#/s:21SwiftQuantumComputing0B13OperatorErrorO38circuitQubitCountHasToBeBiggerThanZeroyA2CmF":{"name":"circuitQubitCountHasToBeBiggerThanZero","abstract":"<p>Throwed when the number of qubits (informed or inferred) to create a circuit is 0</p>","parent_name":"QuantumOperatorError"},"Enums/QuantumOperatorError.html#/s:21SwiftQuantumComputing0B13OperatorErrorO04gateE0yAcA04GateE0O_tcACmF":{"name":"gateError(error:)","abstract":"<p>Throwed when the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Gate.html\">Gate</a></code> used to create the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/QuantumOperator.html\">QuantumOperator</a></code> is not valid</p>","parent_name":"QuantumOperatorError"},"Enums/QuantumOperatorError.html#/s:21SwiftQuantumComputing0B13OperatorErrorO05noiseE0yAcA05NoiseE0O_tcACmF":{"name":"noiseError(error:)","abstract":"<p>Throwed when the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Noise.html\">Noise</a></code> operator used to create the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/QuantumOperator.html\">QuantumOperator</a></code> is not valid</p>","parent_name":"QuantumOperatorError"},"Enums/QuantumOperatorError.html#/s:21SwiftQuantumComputing0B13OperatorErrorO030operatorInputCountDoesNotMatchd11MatrixQubitH0yA2CmF":{"name":"operatorInputCountDoesNotMatchOperatorMatrixQubitCount","abstract":"<p>Throwed when an operator does not use as many qubits as its matrix is able to handle</p>","parent_name":"QuantumOperatorError"},"Enums/QuantumOperatorError.html#/s:21SwiftQuantumComputing0B13OperatorErrorO27operatorInputsAreNotInBoundyA2CmF":{"name":"operatorInputsAreNotInBound","abstract":"<p>Throwed when an operator references one or more qubits that do not exist</p>","parent_name":"QuantumOperatorError"},"Enums/QuantumOperatorError.html#/s:21SwiftQuantumComputing0B13OperatorErrorO26operatorInputsAreNotUniqueyA2CmF":{"name":"operatorInputsAreNotUnique","abstract":"<p>Throwed when an operator references same qubit/s multiple times</p>","parent_name":"QuantumOperatorError"},"Enums/QuantumOperatorError.html#/s:21SwiftQuantumComputing0B13OperatorErrorO47operatorHandlesMoreQubitsThanCircuitActuallyHasyA2CmF":{"name":"operatorHandlesMoreQubitsThanCircuitActuallyHas","abstract":"<p>Throwed when an operator requires more qubits than the circuit actually has</p>","parent_name":"QuantumOperatorError"},"Enums/SimplifiedNoise.html#/s:21SwiftQuantumComputing15SimplifiedNoiseO7bitFlipyACSd_SitcACmF":{"name":"bitFlip(probability:target:)","abstract":"<p>Noise channel that applies a bit flip to <code>target</code> with given <code>probability</code></p>","parent_name":"SimplifiedNoise"},"Enums/SimplifiedNoise.html#/s:21SwiftQuantumComputing15SimplifiedNoiseO8matricesyACSayAA6MatrixVG_SaySiGtcACmF":{"name":"matrices(matrices:inputs:)","abstract":"<p>Noise channel that applies <code>matrices</code> to any number of <code>inputs</code></p>","parent_name":"SimplifiedNoise"},"Enums/SimplifiedNoise.html#/s:21SwiftQuantumComputing15SimplifiedNoiseO12phaseDampingyACSd_SitcACmF":{"name":"phaseDamping(probability:target:)","abstract":"<p>Noise channel that applies a phase damping to <code>target</code> with given <code>probability</code></p>","parent_name":"SimplifiedNoise"},"Enums/NoiseError.html#/s:21SwiftQuantumComputing10NoiseErrorO25noiseMatricesAreNotSquareyA2CmF":{"name":"noiseMatricesAreNotSquare","abstract":"<p>Throwed if any matrix in the noise operator is not square</p>","parent_name":"NoiseError"},"Enums/NoiseError.html#/s:21SwiftQuantumComputing10NoiseErrorO32noiseMatricesCanNotBeAnEmptyListyA2CmF":{"name":"noiseMatricesCanNotBeAnEmptyList","abstract":"<p>Throwed when noise operator has not <code>matrices</code></p>","parent_name":"NoiseError"},"Enums/NoiseError.html#/s:21SwiftQuantumComputing10NoiseErrorO34noiseMatricesDoNotHaveSameRowCountyA2CmF":{"name":"noiseMatricesDoNotHaveSameRowCount","abstract":"<p>Throwed if any matrix in the noise operator does not have the same number of rows that the others</p>","parent_name":"NoiseError"},"Enums/NoiseError.html#/s:21SwiftQuantumComputing10NoiseErrorO33noiseMatricesDoNotSatisfyIdentityyA2CmF":{"name":"noiseMatricesDoNotSatisfyIdentity","abstract":"<p>Throwed when addition of adjointed noise matrices by themselves is not equal to identity matrix</p>","parent_name":"NoiseError"},"Enums/NoiseError.html#/s:21SwiftQuantumComputing10NoiseErrorO39noiseMatricesRowCountHasToBeAPowerOfTwoyA2CmF":{"name":"noiseMatricesRowCountHasToBeAPowerOfTwo","abstract":"<p>Throwed when the number of rows in any matrix used to build a noise operator is not a power of 2</p>","parent_name":"NoiseError"},"Enums/NoiseError.html#/s:21SwiftQuantumComputing10NoiseErrorO40noiseProbabilityHasToBeBetweenZeroAndOneyA2CmF":{"name":"noiseProbabilityHasToBeBetweenZeroAndOne","abstract":"<p>Throwed when the noise probability is not between [0&hellip;1]</p>","parent_name":"NoiseError"},"Enums/SimplifiedGate.html#/s:21SwiftQuantumComputing14SimplifiedGateO3notyACSi_tcACmF":{"name":"not(target:)","abstract":"<p>Not gate with 1 input: <code>target</code></p>","parent_name":"SimplifiedGate"},"Enums/SimplifiedGate.html#/s:21SwiftQuantumComputing14SimplifiedGateO8hadamardyACSi_tcACmF":{"name":"hadamard(target:)","abstract":"<p>Hadamard gate with 1 input: <code>target</code></p>","parent_name":"SimplifiedGate"},"Enums/SimplifiedGate.html#/s:21SwiftQuantumComputing14SimplifiedGateO10phaseShiftyACSd_SitcACmF":{"name":"phaseShift(radians:target:)","abstract":"<p>Quantum gate that shifts phase of the quantum state in <code>target</code> by <code>radians</code></p>","parent_name":"SimplifiedGate"},"Enums/SimplifiedGate.html#/s:21SwiftQuantumComputing14SimplifiedGateO8rotationyAcA0E0V4AxisO_SdSitcACmF":{"name":"rotation(axis:radians:target:)","abstract":"<p>Quantum gate that defines a rotation of <code>radians</code> around <code>axis</code> of the quantum state in <code>target</code></p>","parent_name":"SimplifiedGate"},"Enums/SimplifiedGate.html#/s:21SwiftQuantumComputing14SimplifiedGateO6matrixyAcA6MatrixV_SaySiGtcACmF":{"name":"matrix(matrix:inputs:)","abstract":"<p>Quantum gate built with a <code>matrix</code> and any number of <code>inputs</code></p>","parent_name":"SimplifiedGate"},"Enums/SimplifiedGate.html#/s:21SwiftQuantumComputing14SimplifiedGateO6oracleyACSaySSG_SaySiGACtcACmF":{"name":"oracle(truthTable:controls:gate:)","abstract":"<p>Oracle gate composed of a <code>truthtable</code> that specifies which <code>controls</code> activate a <code>gate</code></p>","parent_name":"SimplifiedGate"},"Enums/SimplifiedGate.html#/s:21SwiftQuantumComputing14SimplifiedGateO10controlledyA2C_SaySiGtcACmF":{"name":"controlled(gate:controls:)","abstract":"<p>Quantum <code>gate</code> controlled with <code>controls</code></p>","parent_name":"SimplifiedGate"},"Enums/GateError.html#/s:21SwiftQuantumComputing9GateErrorO31gateControlsCanNotBeAnEmptyListyA2CmF":{"name":"gateControlsCanNotBeAnEmptyList","abstract":"<p>Throwed when a gate without <code>controls</code> is used in a circuit</p>","parent_name":"GateError"},"Enums/GateError.html#/s:21SwiftQuantumComputing9GateErrorO22gateMatrixIsNotUnitaryyA2CmF":{"name":"gateMatrixIsNotUnitary","abstract":"<p>Throwed when the matrix provided by a gate is not unitary</p>","parent_name":"GateError"},"Enums/GateError.html#/s:21SwiftQuantumComputing9GateErrorO36gateMatrixRowCountHasToBeAPowerOfTwoyA2CmF":{"name":"gateMatrixRowCountHasToBeAPowerOfTwo","abstract":"<p>Throwed when the number of rows in a matrix used to build a quantum gate is not a power of 2. A matrix has to","parent_name":"GateError"},"Enums/GateError.html#/s:21SwiftQuantumComputing9GateErrorO54gateTruthTableCanNotBeRepresentedWithGivenControlCountyA2CmF":{"name":"gateTruthTableCanNotBeRepresentedWithGivenControlCount","abstract":"<p>Throwed when an entry in <code>truthTable</code> uses more qubits than are availble in <code>controls</code></p>","parent_name":"GateError"},"Enums/GateError.html#/s:21SwiftQuantumComputing9GateErrorO70gateTruthTableEntriesHaveToBeNonEmptyStringsComposedOnlyOfZerosAndOnesyA2CmF":{"name":"gateTruthTableEntriesHaveToBeNonEmptyStringsComposedOnlyOfZerosAndOnes","abstract":"<p>Throwed when an entry in <code>truthTable</code> is either an emptry string or it is not composed only of 0&rsquo;s and 1&rsquo;s</p>","parent_name":"GateError"},"Enums/DrawCircuitError.html#/s:21SwiftQuantumComputing16DrawCircuitErrorO31qubitCountHasToBeBiggerThanZeroyA2CmF":{"name":"qubitCountHasToBeBiggerThanZero","abstract":"<p>Throwed when <code>qubitCount</code> is 0, i.e. a circuit requires at least 1 qubit</p>","parent_name":"DrawCircuitError"},"Enums/DrawCircuitError.html#/s:21SwiftQuantumComputing16DrawCircuitErrorO22gateWithEmptyInputListyAcA4GateV_tcACmF":{"name":"gateWithEmptyInputList(gate:)","abstract":"<p>Throwed when <code>gate</code> informs no inputs/controls</p>","parent_name":"DrawCircuitError"},"Enums/DrawCircuitError.html#/s:21SwiftQuantumComputing16DrawCircuitErrorO22gateWithRepeatedInputsyAcA4GateV_tcACmF":{"name":"gateWithRepeatedInputs(gate:)","abstract":"<p>Throwed when <code>gate</code> informs the same input qubit twice (or more)</p>","parent_name":"DrawCircuitError"},"Enums/DrawCircuitError.html#/s:21SwiftQuantumComputing16DrawCircuitErrorO24gateWithRepeatedControlsyAcA4GateV_tcACmF":{"name":"gateWithRepeatedControls(gate:)","abstract":"<p>Throwed when <code>gate</code> informs the same control qubit twice (or more)","parent_name":"DrawCircuitError"},"Enums/DrawCircuitError.html#/s:21SwiftQuantumComputing16DrawCircuitErrorO35gateWithOneOrMoreInputsAlsoControlsyAcA4GateV_tcACmF":{"name":"gateWithOneOrMoreInputsAlsoControls(gate:)","abstract":"<p>Throwed when <code>gate</code> tries to use one or more input qubits also as control qubits</p>","parent_name":"DrawCircuitError"},"Enums/DrawCircuitError.html#/s:21SwiftQuantumComputing16DrawCircuitErrorO023gateWithOneOrMoreInputsJ18ControlsOutOfRangeyAcA4GateV_tcACmF":{"name":"gateWithOneOrMoreInputsOrControlsOutOfRange(gate:)","abstract":"<p>Throwed when one or more of the inputs/targets/controls in <code>gate</code> reference a qubit that does not exist</p>","parent_name":"DrawCircuitError"},"Enums/MakeStatevectorBitsError.html#/s:21SwiftQuantumComputing24MakeStatevectorBitsErrorO43bitsAreNotAStringComposedOnlyOfZerosAndOnesyA2CmF":{"name":"bitsAreNotAStringComposedOnlyOfZerosAndOnes","abstract":"<p>Throwed if <code>bits</code> is not composed exclusively of 0&rsquo;s and 1&rsquo;s</p>","parent_name":"MakeStatevectorBitsError"},"Enums/MakeStatevectorError.html#/s:21SwiftQuantumComputing20MakeStatevectorErrorO44vectorAdditionOfSquareModulusIsNotEqualToOneyA2CmF":{"name":"vectorAdditionOfSquareModulusIsNotEqualToOne","abstract":"<p>Throwed when <code>vector</code> is not valid</p>","parent_name":"MakeStatevectorError"},"Enums/MakeStatevectorError.html#/s:21SwiftQuantumComputing20MakeStatevectorErrorO29vectorCountHasToBeAPowerOfTwoyA2CmF":{"name":"vectorCountHasToBeAPowerOfTwo","abstract":"<p>Throwed when the length of <code>vector</code> is not a power of 2. An <code>vector</code> represents all possible qubit combinations,","parent_name":"MakeStatevectorError"},"Enums/SummarizedProbabilitiesError.html#/s:21SwiftQuantumComputing28SummarizedProbabilitiesErrorO24qubitsAreNotInsideBoundsyA2CmF":{"name":"qubitsAreNotInsideBounds","abstract":"<p>Throwed when <code>qubits</code> references a qubit that does not exist in the circuit</p>","parent_name":"SummarizedProbabilitiesError"},"Enums/SummarizedProbabilitiesError.html#/s:21SwiftQuantumComputing28SummarizedProbabilitiesErrorO18qubitsAreNotUniqueyA2CmF":{"name":"qubitsAreNotUnique","abstract":"<p>Throwed when <code>qubits</code> contains repeated values</p>","parent_name":"SummarizedProbabilitiesError"},"Enums/SummarizedProbabilitiesError.html#/s:21SwiftQuantumComputing28SummarizedProbabilitiesErrorO25qubitsCanNotBeAnEmptyListyA2CmF":{"name":"qubitsCanNotBeAnEmptyList","abstract":"<p>Throwed when <code>qubits</code> does not specify any qubit, i.e. it is empty</p>","parent_name":"SummarizedProbabilitiesError"},"Enums/GroupedProbabilitiesError.html#/s:21SwiftQuantumComputing25GroupedProbabilitiesErrorO30groupQubitsCanNotBeAnEmptyListyA2CmF":{"name":"groupQubitsCanNotBeAnEmptyList","abstract":"<p>Throwed when <code>groupQubits</code> does not specify any qubit, i.e. it is empty</p>","parent_name":"GroupedProbabilitiesError"},"Enums/GroupedProbabilitiesError.html#/s:21SwiftQuantumComputing25GroupedProbabilitiesErrorO24qubitsAreNotInsideBoundsyA2CmF":{"name":"qubitsAreNotInsideBounds","abstract":"<p>Throwed when <code>groupQubits</code> and/or <code>summaryQubits</code> references a qubit that does not exist in the circuit</p>","parent_name":"GroupedProbabilitiesError"},"Enums/GroupedProbabilitiesError.html#/s:21SwiftQuantumComputing25GroupedProbabilitiesErrorO18qubitsAreNotUniqueyA2CmF":{"name":"qubitsAreNotUnique","abstract":"<p>Throwed when <code>groupQubits</code> and/or <code>summaryQubits</code> contains repeated values</p>","parent_name":"GroupedProbabilitiesError"},"Enums/DensityMatrixError.html#/s:21SwiftQuantumComputing18DensityMatrixErrorO015operatorThrowedF0yAcA0B8OperatorV_AA0biF0OtcACmF":{"name":"operatorThrowedError(operator:error:)","abstract":"<p>Throwed if <code>operator</code> throws <code>error</code></p>","parent_name":"DensityMatrixError"},"Enums/DensityMatrixError.html#/s:21SwiftQuantumComputing18DensityMatrixErrorO09resultingdE28EigenvaluesDoesNotAddUpToOneyA2CmF":{"name":"resultingDensityMatrixEigenvaluesDoesNotAddUpToOne","abstract":"<p>Throwed when the resulting density matrix is not a valid: its eigenvalues do not add to one</p>","parent_name":"DensityMatrixError"},"Enums/DensityMatrixError.html#/s:21SwiftQuantumComputing18DensityMatrixErrorO09resultingdE14IsNotHermitianyA2CmF":{"name":"resultingDensityMatrixIsNotHermitian","abstract":"<p>Throwed when the resulting density matrix is not a valid: it is not hermitian</p>","parent_name":"DensityMatrixError"},"Enums/DensityMatrixError.html#/s:21SwiftQuantumComputing18DensityMatrixErrorO09resultingdE23WithNegativeEigenvaluesyA2CmF":{"name":"resultingDensityMatrixWithNegativeEigenvalues","abstract":"<p>Throwed when the resulting density matrix is not a valid: at least one of its eigenvalues is negative</p>","parent_name":"DensityMatrixError"},"Enums/DensityMatrixError.html#/s:21SwiftQuantumComputing18DensityMatrixErrorO024unableToComputeResultingdE11EigenvaluesyA2CmF":{"name":"unableToComputeResultingDensityMatrixEigenvalues","abstract":"<p>Throwed if it was not possible to get the eigenvalues for the resulting density matrix</p>","parent_name":"DensityMatrixError"},"Enums/MakeDensityMatrixError.html#/s:21SwiftQuantumComputing22MakeDensityMatrixErrorO34matrixEigenvaluesDoesNotAddUpToOneyA2CmF":{"name":"matrixEigenvaluesDoesNotAddUpToOne","abstract":"<p>Throwed when <code>matrix</code> is not a valid density matrix: its eigenvalues do not add to one</p>","parent_name":"MakeDensityMatrixError"},"Enums/MakeDensityMatrixError.html#/s:21SwiftQuantumComputing22MakeDensityMatrixErrorO20matrixIsNotHermitianyA2CmF":{"name":"matrixIsNotHermitian","abstract":"<p>Throwed when <code>matrix</code> is not a valid density matrix: it is not hermitian</p>","parent_name":"MakeDensityMatrixError"},"Enums/MakeDensityMatrixError.html#/s:21SwiftQuantumComputing22MakeDensityMatrixErrorO29matrixWithNegativeEigenvaluesyA2CmF":{"name":"matrixWithNegativeEigenvalues","abstract":"<p>Throwed when <code>matrix</code> is not a valid density matrix: at least one of its eigenvalues is negative</p>","parent_name":"MakeDensityMatrixError"},"Enums/MakeDensityMatrixError.html#/s:21SwiftQuantumComputing22MakeDensityMatrixErrorO015unableToComputeF11EigenvaluesyA2CmF":{"name":"unableToComputeMatrixEigenvalues","abstract":"<p>Throwed if it was not possible to get the eigenvalues for the given <code>matrix</code></p>","parent_name":"MakeDensityMatrixError"},"Enums/UnitaryError.html#/s:21SwiftQuantumComputing12UnitaryErrorO26circuitCanNotBeAnEmptyListyA2CmF":{"name":"circuitCanNotBeAnEmptyList","abstract":"<p>Throwed when the circuit has no gate from which to produce an unitary matrix</p>","parent_name":"UnitaryError"},"Enums/UnitaryError.html#/s:21SwiftQuantumComputing12UnitaryErrorO011gateThrowedE0yAcA4GateV_AA0b8OperatorE0OtcACmF":{"name":"gateThrowedError(gate:error:)","abstract":"<p>Throwed if <code>gate</code> throws <code>error</code></p>","parent_name":"UnitaryError"},"Enums/UnitaryError.html#/s:21SwiftQuantumComputing12UnitaryErrorO020resultingMatrixIsNotD0yA2CmF":{"name":"resultingMatrixIsNotUnitary","abstract":"<p>Throwed when the resulting matrix lost too much precision after applying <code>gates</code></p>","parent_name":"UnitaryError"},"Enums/StatevectorError.html#/s:21SwiftQuantumComputing16StatevectorErrorO011gateThrowedE0yAcA4GateV_AA0b8OperatorE0OtcACmF":{"name":"gateThrowedError(gate:error:)","abstract":"<p>Throwed if <code>gate</code> throws <code>error</code></p>","parent_name":"StatevectorError"},"Enums/StatevectorError.html#/s:21SwiftQuantumComputing16StatevectorErrorO09resultingD38AdditionOfSquareModulusIsNotEqualToOneyA2CmF":{"name":"resultingStatevectorAdditionOfSquareModulusIsNotEqualToOne","abstract":"<p>Throwed when the resulting state vector lost too much precision after applying <code>gates</code></p>","parent_name":"StatevectorError"},"Enums/DecomposeGatesError.html#/s:21SwiftQuantumComputing19DecomposeGatesErrorO011gateThrowedF0yAcA4GateV_AA0b8OperatorF0OtcACmF":{"name":"gateThrowedError(gate:error:)","abstract":"<p>Throwed if <code>gate</code> throws <code>error</code></p>","parent_name":"DecomposeGatesError"},"Enums/EvolveCircuitError.html#/s:21SwiftQuantumComputing18EvolveCircuitErrorO033gateInputCountIsBiggerThanUseCasee5QubitI0yAcA16ConfigurableGate_p_tcACmF":{"name":"gateInputCountIsBiggerThanUseCaseCircuitQubitCount(gate:)","abstract":"<p>Throwed if <code>gate</code> requires more qubits than <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/GeneticUseCase/Circuit.html#/s:21SwiftQuantumComputing14GeneticUseCaseV7CircuitV10qubitCountSivp\">GeneticUseCase.Circuit.qubitCount</a></code> specifies</p>","parent_name":"EvolveCircuitError"},"Enums/EvolveCircuitError.html#/s:21SwiftQuantumComputing18EvolveCircuitErrorO18useCaseListIsEmptyyA2CmF":{"name":"useCaseListIsEmpty","abstract":"<p>Throwed if <code>useCases</code> is an empty list</p>","parent_name":"EvolveCircuitError"},"Enums/EvolveCircuitError.html#/s:21SwiftQuantumComputing18EvolveCircuitErrorO025useCaseMeasurementThrowedF0yAcA010GeneticUseH0V_AA011StatevectorF0OtcACmF":{"name":"useCaseMeasurementThrowedError(useCase:error:)","abstract":"<p>Throwed when a circuit evolved to solve <code>useCase</code>throwed <code>error</code> while measuring the probabilities of all possible outputs</p>","parent_name":"EvolveCircuitError"},"Enums/EvolveCircuitError.html#/s:21SwiftQuantumComputing18EvolveCircuitErrorO024useCasesDoNotSpecifySameE10QubitCountyA2CmF":{"name":"useCasesDoNotSpecifySameCircuitQubitCount","abstract":"<p>Throwed when <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/GeneticUseCase/Circuit.html#/s:21SwiftQuantumComputing14GeneticUseCaseV7CircuitV10qubitCountSivp\">GeneticUseCase.Circuit.qubitCount</a></code> is not the same in all <code>useCases</code></p>","parent_name":"EvolveCircuitError"},"Enums/EvolveCircuitError.html":{"name":"EvolveCircuitError","abstract":"<p>Errors throwed by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/GeneticFactory.html#/s:21SwiftQuantumComputing14GeneticFactoryP13evolveCircuit13configuration8useCases5gatess6ResultOySd4eval_SayAA4GateVGAGSiSg8oracleAttAA06EvolveG5ErrorOGAA0D13ConfigurationV_SayAA0D7UseCaseVGSayAA012ConfigurableN0_pGtF\">GeneticFactory.evolveCircuit(configuration:useCases:gates:)</a></code></p>"},"Enums/DecomposeGatesError.html":{"name":"DecomposeGatesError","abstract":"<p>Errors throwed by <code>TwoLevelDecompositionSolver.decomposeGates(:restrictedToCircuitQubitCount:)</code></p>"},"Enums/StatevectorError.html":{"name":"StatevectorError","abstract":"<p>Errors throwed by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Circuit.html#/s:21SwiftQuantumComputing7CircuitP11statevector16withInitialStates6ResultOyAA0D11Statevector_pAA0J5ErrorOGAaH_p_tF\">Circuit.statevector(withInitialState:)</a></code></p>"},"Enums/UnitaryError.html":{"name":"UnitaryError","abstract":"<p>Errors throwed by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Circuit.html#/s:21SwiftQuantumComputing7CircuitP7unitary14withQubitCounts6ResultOyAA6MatrixVAA12UnitaryErrorOGSi_tF\">Circuit.unitary(withQubitCount:)</a></code></p>"},"Enums/MakeDensityMatrixError.html":{"name":"MakeDensityMatrixError","abstract":"<p>Errors throwed by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CircuitDensityMatrixFactory.html#/s:21SwiftQuantumComputing27CircuitDensityMatrixFactoryP04makeeF06matrixs6ResultOyAA0deF0_pAA04MakeeF5ErrorOGAA0F0V_tF\">CircuitDensityMatrixFactory.makeDensityMatrix(matrix:)</a></code></p>"},"Enums/DensityMatrixError.html":{"name":"DensityMatrixError","abstract":"<p>Errors throwed by <code>Circuit.densityMatrix(withInitialState:)</code></p>"},"Enums/GroupedProbabilitiesError.html":{"name":"GroupedProbabilitiesError","abstract":"<p>Errors throwed by"},"Enums/SummarizedProbabilitiesError.html":{"name":"SummarizedProbabilitiesError","abstract":"<p>Errors throwed by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CircuitProbabilities.html#/s:21SwiftQuantumComputing20CircuitProbabilitiesPAAE010summarizedE08byQubitss6ResultOySDySSSdGAA010SummarizedE5ErrorOGSaySiG_tF\">CircuitProbabilities.summarizedProbabilities(byQubits:)</a></code>.</p>"},"Enums/MakeStatevectorError.html":{"name":"MakeStatevectorError","abstract":"<p>Errors throwed by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CircuitStatevectorFactory.html#/s:21SwiftQuantumComputing25CircuitStatevectorFactoryP04makeE06vectors6ResultOyAA0dE0_pAA04MakeE5ErrorOGAA6VectorV_tF\">CircuitStatevectorFactory.makeStatevector(vector:)</a></code></p>"},"Enums/MakeStatevectorBitsError.html":{"name":"MakeStatevectorBitsError","abstract":"<p>Errors throwed by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CircuitStatevectorFactory.html#/s:21SwiftQuantumComputing25CircuitStatevectorFactoryPAAE04makeE04bitss6ResultOyAA0dE0_pAA04MakeE9BitsErrorOGSS_tF\">CircuitStatevectorFactory.makeStatevector(bits:)</a></code>.</p>"},"Enums/DrawCircuitError.html":{"name":"DrawCircuitError","abstract":"<p>Errors throwed by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Drawable.html#/s:21SwiftQuantumComputing8DrawableP11drawCircuit_10qubitCounts6ResultOySo6NSViewCAA04DrawF5ErrorOGSayAA4GateVG_SitF\">Drawable.drawCircuit(_:qubitCount:)</a></code></p>"},"Enums/GateError.html":{"name":"GateError","abstract":"<p>Errors throwed  while acting on a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Gate.html\">Gate</a></code> in a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Circuit.html\">Circuit</a></code></p>"},"Enums/SimplifiedGate.html":{"name":"SimplifiedGate","abstract":"<p>Simplified representation of a quantum gate. Use to easily identify the type of a quantum gate and its components</p>"},"Enums/NoiseError.html":{"name":"NoiseError","abstract":"<p>Errors throwed  while acting on a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Noise.html\">Noise</a></code> operator in a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/NoiseCircuit.html\">NoiseCircuit</a></code></p>"},"Enums/SimplifiedNoise.html":{"name":"SimplifiedNoise","abstract":"<p>Simplified representation of a quantum noise operator. Use to easily identify the type of a quantum noise and its components</p>"},"Enums/QuantumOperatorError.html":{"name":"QuantumOperatorError","abstract":"<p>Errors throwed  while acting on a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/QuantumOperator.html\">QuantumOperator</a></code> in a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Circuit.html\">Circuit</a></code> or <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/NoiseCircuit.html\">NoiseCircuit</a></code></p>"},"Enums/SimplifiedQuantumOperator.html":{"name":"SimplifiedQuantumOperator","abstract":"<p>Simplified representation of a quantum operator. Use to easily identify the type of a quantum operator and its components</p>"},"readme.html":{"name":"README"},"Guides.html":{"name":"Guides","abstract":"<p>The following guides are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"},"Typealiases.html":{"name":"Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}